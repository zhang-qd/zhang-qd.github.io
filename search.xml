<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Github Pages+hexo+NexT个人博客搭建及配置</title>
    <url>/2023/09/12/Github-Pages-hexo-NexT%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<blockquote>
<p>Github Pages 是 github 提供的免费静态博客平台，使用 hexo 静态博客 + NexT 主题能够快速地搭建优雅的博客。在此记录下搭建博客的过程。</p>
</blockquote>
<span id="more"></span>
<h2 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h2><ol>
<li>首先在<a href="https://github.com/">github</a>中创建一个仓库，命名为<code>&lt;your_name&gt;.github.io</code></li>
<li>在本机安装好git、ssh、node、hexo，创建博客文件夹，安装需要的插件 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g # 安装hexo</span><br><span class="line">hexo init blog_folder</span><br><span class="line">cd blog_folder</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save # hexo的git插件</span><br></pre></td></tr></table></figure></li>
<li>修改<code>_config.yml</code>文件中的<code>Site</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Site</span></span><br><span class="line">title: # 根据个人喜好设置</span><br><span class="line">subtitle: &#x27;&#x27; # 根据个人喜好设置</span><br><span class="line">description: &#x27;&#x27; # 根据个人喜好设置</span><br><span class="line">keywords: # 根据个人喜好设置</span><br><span class="line">author: # 根据个人喜好设置</span><br><span class="line">language: zh-CN # 设置为中文</span><br><span class="line">timezone: &#x27;&#x27; # 设置时区</span><br></pre></td></tr></table></figure></li>
<li>修改<code>_config.yml</code>文件中的<code>URL</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">url: https://&lt;your_name&gt;.github.io # 也可以设置为其他网址</span><br></pre></td></tr></table></figure></li>
<li>修改<code>_config.yml</code>文件中的<code>Deployment</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Deployment</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Docs: https://hexo.io/docs/deployment.html</span></span></span><br><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27;</span><br><span class="line">  repo: git@github.com:&lt;your_name&gt;/&lt;your_name&gt;.github.io.git # 设置为你的仓库地址</span><br><span class="line">  branch: master # 设置为想要推送的分支，不建议修改</span><br></pre></td></tr></table></figure></li>
</ol>
<p>至此，博客初始状态创建完毕。</p>
<h2 id="使用NexT主题"><a href="#使用NexT主题" class="headerlink" title="使用NexT主题"></a>使用<code>NexT</code>主题</h2><ol>
<li>克隆<code>NexT</code>主题到本地 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">请首先进入到blog_folder目录下</span></span><br><span class="line">git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li>
<li>修改<code>_config.yml</code>文件中的<code>Extensions</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></li>
<li>在<code>_config.yml</code>文件中添加以下内容 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Third-party plugins: search</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br><span class="line">  format: html</span><br><span class="line"></span><br><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="配置NexT主题"><a href="#配置NexT主题" class="headerlink" title="配置NexT主题"></a>配置<code>NexT</code>主题</h2><ol>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>minify</code>参数为<code>true</code> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">minify: true</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>Scheme Settings</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Schemes</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">scheme: Muse</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">scheme: Mist</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">scheme: Pisces</span></span><br><span class="line">scheme: Gemini # 使用Gemini格式</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>Menu Settings</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home # 主页</span><br><span class="line">  categories: /categories/ || fa fa-th # 文档分类</span><br><span class="line">  tags: /tags/ || fa fa-tags # 文档标签</span><br><span class="line">  archives: /archives/ || fa fa-archive # 时间轴</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">commonweal: /404/ || fa fa-heartbeat</span></span><br><span class="line">  about: /about/ || fa fa-user # 关于</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>menu_settings</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">menu_settings:</span><br><span class="line">  icons: true</span><br><span class="line">  badges: true</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>social</code>部分（按需修改）</li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>footer</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">footer:</span><br><span class="line">since: 2023 # 博客开始时间</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Icon between year and copyright info.</span></span><br><span class="line">icon:</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Icon name <span class="keyword">in</span> Font Awesome. See: https://fontawesome.com/icons</span></span><br><span class="line">name: fa fa-heart</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">If you want to animate the icon, <span class="built_in">set</span> it to <span class="literal">true</span>.</span></span><br><span class="line">animated: true # 产生动画效果</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Change the color of icon, using Hex Code.</span></span><br><span class="line">color: &quot;#ff0000&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">If not defined, `author` from Hexo `_config.yml` will be used.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Set to `<span class="literal">false</span>` to <span class="built_in">disable</span> the copyright statement.</span></span><br><span class="line">copyright:</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Powered by Hexo &amp; NexT</span></span><br><span class="line">powered: false</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>post_meta</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">post_meta:</span><br><span class="line">  item_text: true</span><br><span class="line">  created_at: true</span><br><span class="line">  updated_at:</span><br><span class="line">    enable: true</span><br><span class="line">    another_day: false # 设置为false，只要文件发生修改即可显示修改时间</span><br><span class="line">  categories: true</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>back2top</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">back2top: # 显示浏览进度</span><br><span class="line">  enable: true             </span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Back to top <span class="keyword">in</span> sidebar.</span></span><br><span class="line">  sidebar: true</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Scroll percent label <span class="keyword">in</span> b2t button.</span></span><br><span class="line">  scrollpercent: true</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>reading_progress</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">reading_progress: # 在顶部显示浏览进度</span><br><span class="line">  enable: true</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Available values: left | right</span></span><br><span class="line">  start_at: left</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Available values: top | bottom</span></span><br><span class="line">  position: top</span><br><span class="line">  reversed: false</span><br><span class="line">  color: &quot;#37c6c0&quot;</span><br><span class="line">  height: 3px</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>github_banner</code>部分<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">github_banner: # 在右上角显示github</span><br><span class="line">  enable: true</span><br><span class="line">  permalink: https://github.com/&lt;your-name&gt;</span><br><span class="line">  title: Follow me on github # 可以更改</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>busuanzi_count</code>部分<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">busuanzi_count: # 统计浏览量</span><br><span class="line">  enable: true</span><br><span class="line">  total_visitors: true</span><br><span class="line">  total_visitors_icon: fa fa-user</span><br><span class="line">  total_views: true</span><br><span class="line">  total_views_icon: fa fa-eye</span><br><span class="line">  post_views: true</span><br><span class="line">  post_views_icon: far fa-eye</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/languages/zh-CN.yml</code>文件中的<code>menu</code>部分<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">menu: # 修改目录的中文显示</span><br><span class="line">  home: 首页</span><br><span class="line">  archives: 时间轴</span><br><span class="line">  categories: 文章分类</span><br><span class="line">  tags: 文章标签</span><br><span class="line">  about: 关于作者</span><br><span class="line">  search: 搜索</span><br><span class="line">  schedule: 日历</span><br><span class="line">  sitemap: 站点地图</span><br><span class="line">  commonweal: 公益 404</span><br></pre></td></tr></table></figure></li>
<li>在<code>themes/next/layout/_partials/footer.njk</code>文件中添加以下部分<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;!-- 网站运行时间的设置 --&gt;</span><br><span class="line">&lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;</span><br><span class="line">&lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt;  Sometimes your whole life boils down to one insame move.</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var now = new Date();</span><br><span class="line">    function createtime() &#123;</span><br><span class="line">        var grt= new Date(&quot;09/12/2023 14:00:00&quot;);//此处修改你的建站时间或者网站上线时间</span><br><span class="line">        now.setTime(now.getTime()+250);</span><br><span class="line">        days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days);</span><br><span class="line">        hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours);</span><br><span class="line">        if(String(hnum).length ==1 )&#123;hnum = &quot;0&quot; + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);</span><br><span class="line">        mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = &quot;0&quot; + mnum;&#125;</span><br><span class="line">        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);</span><br><span class="line">        snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = &quot;0&quot; + snum;&#125;</span><br><span class="line">        document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;;</span><br><span class="line">        document.getElementById(&quot;times&quot;).innerHTML = hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">setInterval(&quot;createtime()&quot;,250);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save # 本地搜索需要</span><br><span class="line">npm install hexo-word-counter --save # 字数时间统计</span><br></pre></td></tr></table></figure>

<h2 id="生成网页"><a href="#生成网页" class="headerlink" title="生成网页"></a>生成网页</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean # 清楚缓存</span><br><span class="line">hexo g # 生成网页</span><br><span class="line">hexo d # 发布到github等</span><br><span class="line">hexo s # 本地查看</span><br></pre></td></tr></table></figure>

<h2 id="博文加密"><a href="#博文加密" class="headerlink" title="博文加密"></a>博文加密</h2><ol>
<li>安装插件  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-blog-encrypt</span><br></pre></td></tr></table></figure></li>
<li>在<code>_config.yml</code>文件中添加以下内容  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">encrypt:</span><br><span class="line">  enable: true</span><br><span class="line">  silent: true # 不输出log信息</span><br><span class="line">  theme: xray # 主题</span><br><span class="line">  tags:</span><br><span class="line">  - &#123;name: xxx, password: xxxx&#125; # 当文章指定了xxx标签后，文章自动加密，密码为xxxx</span><br><span class="line">  abstract: There&#x27;s something hidden here.</span><br><span class="line">  message: Please input the password</span><br><span class="line">  wrong_pass_message: Sorry, the password is incorrect! Please try again.</span><br></pre></td></tr></table></figure></li>
<li>修改<code>scaffolds/post.md</code>文件  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">updated: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags: </span><br><span class="line">categories: </span><br><span class="line">password: </span><br><span class="line">---</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/layout/_macro/sidebar.njk</code>文件（目录问题）  <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;%- if (page.encrypt) %&#125;</span><br><span class="line">  &#123;%- set toc = toc(page.origin, &#123; class: &#x27;nav&#x27;, list_number: page.toc.number, max_depth: page.toc.max_depth &#125;) %&#125;</span><br><span class="line">&#123;%- else %&#125;</span><br><span class="line">  &#123;%- set toc = toc(page.content, &#123; class: &#x27;nav&#x27;, list_number: page.toc.number, max_depth: page.toc.max_depth &#125;) %&#125; # 搜索这一行的内容，替换为这一段即可</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="主要参考连接"><a href="#主要参考连接" class="headerlink" title="主要参考连接"></a>主要参考连接</h2><ol>
<li><a href="https://theme-next.js.org/docs/">NexT主题官方文档</a></li>
<li><a href="https://www.itfanr.cc/2021/04/16/hexo-blog-article-encryption/">Hexo博客加密</a></li>
</ol>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>Github Pages</tag>
        <tag>hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenFOAM安装</title>
    <url>/2023/09/12/OpenFOAM%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<blockquote>
<p>2023年9月1日至2023年9月7日在曙光超算上部署多个版本的<code>OpenFOAM</code>，在此记录下安装过程。</p>
</blockquote>
<p>假设软件目录仿照如下方式进行设置（以<code>OpenFOAM-7</code>为例），且以下目录均已存在。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v7</span><br><span class="line"> |---- app      # 存放可执行文件</span><br><span class="line"> |---- case     # 存放算例文件</span><br><span class="line"> |---- doc      # 存放说明文档</span><br><span class="line"> |---- scripts  # 存放脚本文件</span><br><span class="line"> |---- source   # 存放源代码文件</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h2 id="OpenFOAM-7"><a href="#OpenFOAM-7" class="headerlink" title="OpenFOAM-7"></a><code>OpenFOAM-7</code></h2><h3 id="下载源代码"><a href="#下载源代码" class="headerlink" title="下载源代码"></a>下载源代码</h3><p>以下为<code>download.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">cd $SCRIPTDIR/source</span><br><span class="line"></span><br><span class="line">git clone https://github.com/OpenFOAM/OpenFOAM-7.git</span><br><span class="line">git clone https://github.com/OpenFOAM/ThirdParty-7.git</span><br></pre></td></tr></table></figure>

<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>以下为<code>install.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line">module load compiler/intel/2021.3.0 # intel-2021</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装目录</span></span><br><span class="line">INSTALL_PATH=$SCRIPTDIR</span><br><span class="line">INSTALL_PATH_NEW=$&#123;INSTALL_PATH//\//\\\/&#125;</span><br><span class="line">FOAM_NAME=OpenFOAM-7</span><br><span class="line">THIRD_NAME=ThirdParty-7</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入安装目录</span></span><br><span class="line">cd $INSTALL_PATH/app</span><br><span class="line">rm -rf ./*</span><br><span class="line">cp -r ../source/$FOAM_NAME ./</span><br><span class="line">cp -r ../source/$THIRD_NAME ./</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件</span></span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT=OpenFOAM/export\ MY_INSTALL_PATH=&#x27;$INSTALL_PATH_NEW&#x27;\/app\nexport\ WM_PROJECT=OpenFOAM/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ FOAM_INST_DIR=\$HOME\/\$WM_PROJECT/export\ FOAM_INST_DIR=\$MY_INSTALL_PATH/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT_USER_DIR=\$HOME\/\$WM_PROJECT\/\$USER-\$WM_PROJECT_VERSION/export\ WM_PROJECT_USER_DIR=\$WM_PROJECT_INST_DIR\/\$USER-\$WM_PROJECT_VERSION/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_COMPILER=Gcc/export WM_COMPILER=Icc/&#x27; $FOAM_NAME/etc/bashrc # 使用intel编译器</span><br><span class="line">sed -i &#x27;s/export\ WM_MPLIB=SYSTEMOPENMPI/export\ WM_MPLIB=INTELMPI\nMPI_ROOT=\$I_MPI_ROOT/&#x27; $FOAM_NAME/etc/bashrc # 使用intelMPI</span><br><span class="line">echo &#x27;export WM_CC=icc&#x27; &gt;&gt; $FOAM_NAME/etc/bashrc # 使用intel编译器编译第三方库</span><br><span class="line">echo &#x27;export WM_CXX=icpc&#x27; &gt;&gt; $FOAM_NAME/etc/bashrc # 使用intel编译器编译第三方库</span><br><span class="line">sed -i &#x27;s/gcc/$(WM_CC)/g&#x27; $THIRD_NAME/etc/wmakeFiles/scotch/Makefile.inc.i686_pc_linux2.shlib-OpenFOAM # 使用intel编译器编译scotch</span><br><span class="line">sed -i &#x27;s/mpicc/mpiicc/g&#x27; $THIRD_NAME/etc/wmakeFiles/scotch/Makefile.inc.i686_pc_linux2.shlib-OpenFOAM # 使用intel编译器编译scotch</span><br><span class="line">sed -i &#x27;s/include64/include/g&#x27; $FOAM_NAME/wmake/rules/General/mplibINTELMPI64</span><br><span class="line">sed -i &#x27;s/lib64/lib\/release/g&#x27; $FOAM_NAME/wmake/rules/General/mplibINTELMPI64</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $FOAM_NAME/etc/bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译第三方程序</span></span><br><span class="line">cd $THIRD_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.thirdparty-7 2&gt;&amp;1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译OpenFOAM</span></span><br><span class="line">cd ../$FOAM_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.openfoam-7 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<h3 id="加载环境变量"><a href="#加载环境变量" class="headerlink" title="加载环境变量"></a>加载环境变量</h3><p>以下为<code>env.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line">module load compiler/intel/2021.3.0 # intel-2021</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $SCRIPTDIR/app/OpenFOAM-7/etc/bashrc</span><br></pre></td></tr></table></figure>

<h3 id="软件测试"><a href="#软件测试" class="headerlink" title="软件测试"></a>软件测试</h3><p>以下为<code>job.sh</code>脚本内容，该脚本位于<code>case</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -J cavity</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -p xahctar</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -N 2</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --ntasks-per-node=2</span></span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">source ../scripts/env.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝官方自带算例文件</span></span><br><span class="line">rm -rf ./cavity</span><br><span class="line">cp -r $FOAM_TUTORIALS/incompressible/icoFoam/cavity/cavity .</span><br><span class="line"></span><br><span class="line">cd cavity</span><br><span class="line">cp $FOAM_ETC/caseDicts/preProcessing/decomposeParDict ./system # 自带算例为串行算例，将其修改为并行算例</span><br><span class="line">sed -i &#x27;s/4/2/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/8/4/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/20/100/g&#x27; system/blockMeshDict # 增大网格分辨率</span><br><span class="line">sed -i &#x27;s/0\.005/0\.00004/g&#x27; system/controlDict # 保证计算稳定</span><br><span class="line">sed -i &#x27;s/20/2500/g&#x27; system/controlDict # 设置输出文件间隔</span><br><span class="line">sed -i &#x27;s/0\.5/1/g&#x27; system/controlDict # 设置计算时间</span><br><span class="line"></span><br><span class="line">blockMesh &gt; log.blockMesh 2&gt;&amp;1 # 划分网格</span><br><span class="line">decomposePar &gt; log.decomposePar 2&gt;&amp;1 # 并行分区</span><br><span class="line">mpirun icoFoam -parallel &gt; log.icoFoam 2&gt;&amp;1 # 开始计算</span><br><span class="line">reconstructPar &gt; log.reconstructPar 2&gt;&amp;1 #将并行计算的数据归纳，便于后处理</span><br></pre></td></tr></table></figure>

<p>在<code>case</code>目录下运行<code>sbatch ./job.sh</code>命令即可提交任务。</p>
<h2 id="OpenFOAM-8"><a href="#OpenFOAM-8" class="headerlink" title="OpenFOAM-8"></a><code>OpenFOAM-8</code></h2><h3 id="下载源代码-1"><a href="#下载源代码-1" class="headerlink" title="下载源代码"></a>下载源代码</h3><p>以下为<code>download.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">cd $SCRIPTDIR/source</span><br><span class="line"></span><br><span class="line">git clone https://github.com/OpenFOAM/OpenFOAM-8.git</span><br><span class="line">git clone https://github.com/OpenFOAM/ThirdParty-8.git</span><br></pre></td></tr></table></figure>

<h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>以下为<code>install.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line">module load compiler/intel/2021.3.0 # intel-2021</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装目录</span></span><br><span class="line">INSTALL_PATH=$SCRIPTDIR</span><br><span class="line">INSTALL_PATH_NEW=$&#123;INSTALL_PATH//\//\\\/&#125;</span><br><span class="line">FOAM_NAME=OpenFOAM-8</span><br><span class="line">THIRD_NAME=ThirdParty-8</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入安装目录</span></span><br><span class="line">cd $INSTALL_PATH/app</span><br><span class="line">rm -rf ./*</span><br><span class="line">cp -r ../source/$FOAM_NAME ./</span><br><span class="line">cp -r ../source/$THIRD_NAME ./</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件</span></span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT=OpenFOAM/export\ MY_INSTALL_PATH=&#x27;$INSTALL_PATH_NEW&#x27;\/app\nexport\ WM_PROJECT=OpenFOAM/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ FOAM_INST_DIR=\$HOME\/\$WM_PROJECT/export\ FOAM_INST_DIR=\$MY_INSTALL_PATH/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT_USER_DIR=\$HOME\/\$WM_PROJECT\/\$USER-\$WM_PROJECT_VERSION/export\ WM_PROJECT_USER_DIR=\$WM_PROJECT_INST_DIR\/\$USER-\$WM_PROJECT_VERSION/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_COMPILER=Gcc/export WM_COMPILER=Icc/&#x27; $FOAM_NAME/etc/bashrc # 使用intel编译器</span><br><span class="line">sed -i &#x27;s/export\ WM_MPLIB=SYSTEMOPENMPI/export\ WM_MPLIB=INTELMPI\nMPI_ROOT=\$I_MPI_ROOT/&#x27; $FOAM_NAME/etc/bashrc # 使用intelMPI</span><br><span class="line">echo &#x27;export WM_CC=icc&#x27; &gt;&gt; $FOAM_NAME/etc/bashrc # 使用intel编译器编译第三方库</span><br><span class="line">echo &#x27;export WM_CXX=icpc&#x27; &gt;&gt; $FOAM_NAME/etc/bashrc # 使用intel编译器编译第三方库</span><br><span class="line">sed -i &#x27;s/gcc/$(WM_CC)/g&#x27; $THIRD_NAME/etc/wmakeFiles/scotch/Makefile.inc.i686_pc_linux2.shlib-OpenFOAM # 使用intel编译器编译scotch</span><br><span class="line">sed -i &#x27;s/mpicc/mpiicc/g&#x27; $THIRD_NAME/etc/wmakeFiles/scotch/Makefile.inc.i686_pc_linux2.shlib-OpenFOAM # 使用intel编译器编译scotch</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $FOAM_NAME/etc/bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译第三方程序</span></span><br><span class="line">cd $THIRD_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.thirdparty-8 2&gt;&amp;1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译OpenFOAM</span></span><br><span class="line">cd ../$FOAM_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.openfoam-8 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<h3 id="加载环境变量-1"><a href="#加载环境变量-1" class="headerlink" title="加载环境变量"></a>加载环境变量</h3><p>以下为<code>env.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line">module load compiler/intel/2021.3.0 # intel-2021</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $SCRIPTDIR/app/OpenFOAM-8/etc/bashrc</span><br></pre></td></tr></table></figure>

<h3 id="软件测试-1"><a href="#软件测试-1" class="headerlink" title="软件测试"></a>软件测试</h3><p>以下为<code>job.sh</code>脚本内容，该脚本位于<code>case</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -J cavity</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -p xahctar</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -N 2</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --ntasks-per-node=2</span></span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">source ../scripts/env.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝官方自带算例文件</span></span><br><span class="line">rm -rf ./cavity</span><br><span class="line">cp -r $FOAM_TUTORIALS/incompressible/icoFoam/cavity/cavity .</span><br><span class="line"></span><br><span class="line">cd cavity</span><br><span class="line">cp $FOAM_ETC/caseDicts/preProcessing/decomposeParDict ./system # 自带算例为串行算例，将其修改为并行算例</span><br><span class="line">sed -i &#x27;s/4/2/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/8/4/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/20/100/g&#x27; system/blockMeshDict # 增大网格分辨率</span><br><span class="line">sed -i &#x27;s/0\.005/0\.00004/g&#x27; system/controlDict # 保证计算稳定</span><br><span class="line">sed -i &#x27;s/20/2500/g&#x27; system/controlDict # 设置输出文件间隔</span><br><span class="line">sed -i &#x27;s/0\.5/1/g&#x27; system/controlDict # 设置计算时间</span><br><span class="line"></span><br><span class="line">blockMesh &gt; log.blockMesh 2&gt;&amp;1 # 划分网格</span><br><span class="line">decomposePar &gt; log.decomposePar 2&gt;&amp;1 # 并行分区</span><br><span class="line">mpirun icoFoam -parallel &gt; log.icoFoam 2&gt;&amp;1 # 开始计算</span><br><span class="line">reconstructPar &gt; log.reconstructPar 2&gt;&amp;1 #将并行计算的数据归纳，便于后处理</span><br></pre></td></tr></table></figure>

<p>在<code>case</code>目录下运行<code>sbatch ./job.sh</code>命令即可提交任务。</p>
<h2 id="OpenFOAM-9"><a href="#OpenFOAM-9" class="headerlink" title="OpenFOAM-9"></a><code>OpenFOAM-9</code></h2><h3 id="下载源代码-2"><a href="#下载源代码-2" class="headerlink" title="下载源代码"></a>下载源代码</h3><p>以下为<code>download.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">cd $SCRIPTDIR/source</span><br><span class="line"></span><br><span class="line">git clone https://github.com/OpenFOAM/OpenFOAM-9.git</span><br><span class="line">git clone https://github.com/OpenFOAM/ThirdParty-9.git</span><br></pre></td></tr></table></figure>

<h3 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h3><p>以下为<code>install.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">由于安装时曙光超算上的intel编译器不支持C++14标准，因而采用gcc编译</span></span><br><span class="line">module load compiler/gcc/9.3.0 # 加载gcc</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装目录</span></span><br><span class="line">INSTALL_PATH=$SCRIPTDIR</span><br><span class="line">INSTALL_PATH_NEW=$&#123;INSTALL_PATH//\//\\\/&#125;</span><br><span class="line">FOAM_NAME=OpenFOAM-9</span><br><span class="line">THIRD_NAME=ThirdParty-9</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入安装目录</span></span><br><span class="line">cd $INSTALL_PATH/app</span><br><span class="line">rm -rf ./*</span><br><span class="line">cp -r ../source/$FOAM_NAME ./</span><br><span class="line">cp -r ../source/$THIRD_NAME ./</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件</span></span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT=OpenFOAM/export\ MY_INSTALL_PATH=&#x27;$INSTALL_PATH_NEW&#x27;\/app\nexport\ WM_PROJECT=OpenFOAM/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ FOAM_INST_DIR=\$HOME\/\$WM_PROJECT/export\ FOAM_INST_DIR=\$MY_INSTALL_PATH/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT_USER_DIR=\$HOME\/\$WM_PROJECT\/\$USER-\$WM_PROJECT_VERSION/export\ WM_PROJECT_USER_DIR=\$WM_PROJECT_INST_DIR\/\$USER-\$WM_PROJECT_VERSION/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_MPLIB=SYSTEMOPENMPI/export\ WM_MPLIB=INTELMPI\nMPI_ROOT=\$I_MPI_ROOT/&#x27; $FOAM_NAME/etc/bashrc # 使用intelMPI</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $FOAM_NAME/etc/bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译第三方程序</span></span><br><span class="line">cd $THIRD_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.thirdparty-9 2&gt;&amp;1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译OpenFOAM</span></span><br><span class="line">cd ../$FOAM_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.openfoam-9 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<h3 id="加载环境变量-2"><a href="#加载环境变量-2" class="headerlink" title="加载环境变量"></a>加载环境变量</h3><p>以下为<code>env.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">由于安装时曙光超算上的intel编译器不支持C++14标准，因而采用gcc编译</span></span><br><span class="line">module load compiler/gcc/9.3.0 # 加载gcc</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $SCRIPTDIR/app/OpenFOAM-9/etc/bashrc</span><br></pre></td></tr></table></figure>

<h3 id="软件测试-2"><a href="#软件测试-2" class="headerlink" title="软件测试"></a>软件测试</h3><p>以下为<code>job.sh</code>脚本内容，该脚本位于<code>case</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -J cavity</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -p xahctar</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -N 2</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --ntasks-per-node=2</span></span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">source ../scripts/env.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝官方自带算例文件</span></span><br><span class="line">rm -rf ./cavity</span><br><span class="line">cp -r $FOAM_TUTORIALS/incompressible/icoFoam/cavity/cavity .</span><br><span class="line"></span><br><span class="line">cd cavity</span><br><span class="line">cp $FOAM_ETC/caseDicts/preProcessing/decomposeParDict ./system # 自带算例为串行算例，将其修改为并行算例</span><br><span class="line">sed -i &#x27;s/4/2/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/8/4/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/20/100/g&#x27; system/blockMeshDict # 增大网格分辨率</span><br><span class="line">sed -i &#x27;s/0\.005/0\.00004/g&#x27; system/controlDict # 保证计算稳定</span><br><span class="line">sed -i &#x27;s/20/2500/g&#x27; system/controlDict # 设置输出文件间隔</span><br><span class="line">sed -i &#x27;s/0\.5/1/g&#x27; system/controlDict # 设置计算时间</span><br><span class="line"></span><br><span class="line">blockMesh &gt; log.blockMesh 2&gt;&amp;1 # 划分网格</span><br><span class="line">decomposePar &gt; log.decomposePar 2&gt;&amp;1 # 并行分区</span><br><span class="line">mpirun icoFoam -parallel &gt; log.icoFoam 2&gt;&amp;1 # 开始计算</span><br><span class="line">reconstructPar &gt; log.reconstructPar 2&gt;&amp;1 #将并行计算的数据归纳，便于后处理</span><br></pre></td></tr></table></figure>

<p>在<code>case</code>目录下运行<code>sbatch ./job.sh</code>命令即可提交任务。</p>
<h2 id="OpenFOAM-10"><a href="#OpenFOAM-10" class="headerlink" title="OpenFOAM-10"></a><code>OpenFOAM-10</code></h2><h3 id="下载源代码-3"><a href="#下载源代码-3" class="headerlink" title="下载源代码"></a>下载源代码</h3><p>以下为<code>download.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">cd $SCRIPTDIR/source</span><br><span class="line"></span><br><span class="line">git clone https://github.com/OpenFOAM/OpenFOAM-10.git</span><br><span class="line">git clone https://github.com/OpenFOAM/ThirdParty-10.git</span><br></pre></td></tr></table></figure>

<h3 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h3><p>以下为<code>install.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">由于安装时曙光超算上的intel编译器不支持C++14标准，因而采用gcc编译</span></span><br><span class="line">module load compiler/gcc/9.3.0 # 加载gcc</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装目录</span></span><br><span class="line">INSTALL_PATH=$SCRIPTDIR</span><br><span class="line">INSTALL_PATH_NEW=$&#123;INSTALL_PATH//\//\\\/&#125;</span><br><span class="line">FOAM_NAME=OpenFOAM-10</span><br><span class="line">THIRD_NAME=ThirdParty-10</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入安装目录</span></span><br><span class="line">cd $INSTALL_PATH/app</span><br><span class="line">rm -rf ./*</span><br><span class="line">cp -r ../source/$FOAM_NAME ./</span><br><span class="line">cp -r ../source/$THIRD_NAME ./</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件</span></span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT=OpenFOAM/export\ MY_INSTALL_PATH=&#x27;$INSTALL_PATH_NEW&#x27;\/app\nexport\ WM_PROJECT=OpenFOAM/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ FOAM_INST_DIR=\$HOME\/\$WM_PROJECT/export\ FOAM_INST_DIR=\$MY_INSTALL_PATH/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT_USER_DIR=\$HOME\/\$WM_PROJECT\/\$USER-\$WM_PROJECT_VERSION/export\ WM_PROJECT_USER_DIR=\$WM_PROJECT_INST_DIR\/\$USER-\$WM_PROJECT_VERSION/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_MPLIB=SYSTEMOPENMPI/export\ WM_MPLIB=INTELMPI\nMPI_ROOT=\$I_MPI_ROOT/&#x27; $FOAM_NAME/etc/bashrc # 使用intelMPI</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $FOAM_NAME/etc/bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译第三方程序</span></span><br><span class="line">cd $THIRD_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.thirdparty-10 2&gt;&amp;1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译OpenFOAM</span></span><br><span class="line">cd ../$FOAM_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.openfoam-10 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<h3 id="加载环境变量-3"><a href="#加载环境变量-3" class="headerlink" title="加载环境变量"></a>加载环境变量</h3><p>以下为<code>env.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">由于安装时曙光超算上的intel编译器不支持C++14标准，因而采用gcc编译</span></span><br><span class="line">module load compiler/gcc/9.3.0 # 加载gcc</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $SCRIPTDIR/app/OpenFOAM-10/etc/bashrc</span><br></pre></td></tr></table></figure>

<h3 id="软件测试-3"><a href="#软件测试-3" class="headerlink" title="软件测试"></a>软件测试</h3><p>以下为<code>job.sh</code>脚本内容，该脚本位于<code>case</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -J cavity</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -p xahctar</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -N 2</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --ntasks-per-node=2</span></span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">source ../scripts/env.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝官方自带算例文件</span></span><br><span class="line">rm -rf ./cavity</span><br><span class="line">cp -r $FOAM_TUTORIALS/incompressible/icoFoam/cavity/cavity .</span><br><span class="line"></span><br><span class="line">cd cavity</span><br><span class="line">cp $FOAM_ETC/caseDicts/preProcessing/decomposeParDict ./system # 自带算例为串行算例，将其修改为并行算例</span><br><span class="line">sed -i &#x27;s/4/2/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/8/4/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/20/100/g&#x27; system/blockMeshDict # 增大网格分辨率</span><br><span class="line">sed -i &#x27;s/0\.005/0\.00004/g&#x27; system/controlDict # 保证计算稳定</span><br><span class="line">sed -i &#x27;s/20/2500/g&#x27; system/controlDict # 设置输出文件间隔</span><br><span class="line">sed -i &#x27;s/0\.5/1/g&#x27; system/controlDict # 设置计算时间</span><br><span class="line"></span><br><span class="line">blockMesh &gt; log.blockMesh 2&gt;&amp;1 # 划分网格</span><br><span class="line">decomposePar &gt; log.decomposePar 2&gt;&amp;1 # 并行分区</span><br><span class="line">mpirun icoFoam -parallel &gt; log.icoFoam 2&gt;&amp;1 # 开始计算</span><br><span class="line">reconstructPar &gt; log.reconstructPar 2&gt;&amp;1 #将并行计算的数据归纳，便于后处理</span><br></pre></td></tr></table></figure>

<p>在<code>case</code>目录下运行<code>sbatch ./job.sh</code>命令即可提交任务。</p>
<h2 id="OpenFOAM-11"><a href="#OpenFOAM-11" class="headerlink" title="OpenFOAM-11"></a><code>OpenFOAM-11</code></h2><h3 id="下载源代码-4"><a href="#下载源代码-4" class="headerlink" title="下载源代码"></a>下载源代码</h3><p>以下为<code>download.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">cd $SCRIPTDIR/source</span><br><span class="line"></span><br><span class="line">git clone https://github.com/OpenFOAM/OpenFOAM-11.git</span><br><span class="line">git clone https://github.com/OpenFOAM/ThirdParty-11.git</span><br></pre></td></tr></table></figure>

<h3 id="安装-4"><a href="#安装-4" class="headerlink" title="安装"></a>安装</h3><p>以下为<code>install.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line">module load compiler/gcc/9.3.0 # 加载gcc</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装目录</span></span><br><span class="line">INSTALL_PATH=$SCRIPTDIR</span><br><span class="line">INSTALL_PATH_NEW=$&#123;INSTALL_PATH//\//\\\/&#125;</span><br><span class="line">FOAM_NAME=OpenFOAM-11</span><br><span class="line">THIRD_NAME=ThirdParty-11</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入安装目录</span></span><br><span class="line">cd $INSTALL_PATH/app</span><br><span class="line">rm -rf ./*</span><br><span class="line">cp -r ../source/$FOAM_NAME ./</span><br><span class="line">cp -r ../source/$THIRD_NAME ./</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件</span></span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT=OpenFOAM/export\ MY_INSTALL_PATH=&#x27;$INSTALL_PATH_NEW&#x27;\/app\nexport\ WM_PROJECT=OpenFOAM/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ FOAM_INST_DIR=\$HOME\/\$WM_PROJECT/export\ FOAM_INST_DIR=\$MY_INSTALL_PATH/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT_USER_DIR=\$HOME\/\$WM_PROJECT\/\$USER-\$WM_PROJECT_VERSION/export\ WM_PROJECT_USER_DIR=\$WM_PROJECT_INST_DIR\/\$USER-\$WM_PROJECT_VERSION/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_MPLIB=SYSTEMOPENMPI/export\ WM_MPLIB=INTELMPI\nMPI_ROOT=\$I_MPI_ROOT/&#x27; $FOAM_NAME/etc/bashrc # 使用intelMPI</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $FOAM_NAME/etc/bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译第三方程序</span></span><br><span class="line">cd $THIRD_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.thirdparty-11 2&gt;&amp;1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译OpenFOAM</span></span><br><span class="line">cd ../$FOAM_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.openfoam-11 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<h3 id="加载环境变量-4"><a href="#加载环境变量-4" class="headerlink" title="加载环境变量"></a>加载环境变量</h3><p>以下为<code>env.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line">module load compiler/gcc/9.3.0 # 加载gcc</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $SCRIPTDIR/app/OpenFOAM-11/etc/bashrc</span><br></pre></td></tr></table></figure>

<h3 id="软件测试-4"><a href="#软件测试-4" class="headerlink" title="软件测试"></a>软件测试</h3><p>以下为<code>job.sh</code>脚本内容，该脚本位于<code>case</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -J NACA0012</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -p xahctar</span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -N 2</span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --ntasks-per-node=2</span></span><br><span class="line"> </span><br><span class="line">module purge # 卸载之前的环境 </span><br><span class="line">source ../scripts/env.sh </span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝官方自带算例文件</span> </span><br><span class="line">rm -rf ./aerofoilNACA0012Steady </span><br><span class="line">cp -r $FOAM_TUTORIALS/fluid/aerofoilNACA0012Steady . </span><br><span class="line">cd aerofoilNACA0012Steady </span><br><span class="line">cp $FOAM_ETC/caseDicts/preProcessing/decomposeParDict ./system/ </span><br><span class="line">sed -i &#x27;s/8/4/g&#x27; ./system/decomposeParDict </span><br><span class="line">sed -i &#x27;s/4\ 2\ 1/2\ 1\ 2/g&#x27; ./system/decomposeParDict </span><br><span class="line">sed -i &#x27;s/nNonOrthogonalCorrectors\ 0/nNonOrthogonalCorrectors\ 2/g&#x27; ./system/fvSolution </span><br><span class="line"></span><br><span class="line">cp $FOAM_TUTORIALS/resources/geometry/NACA0012.obj.gz constant/geometry/ </span><br><span class="line"> </span><br><span class="line">blockMesh &gt; log.blockMesh 2&gt;&amp;1 </span><br><span class="line">transformPoints &quot;scale=(1 0 1)&quot; &gt; log.transformPoints 2&gt;&amp;1 </span><br><span class="line">extrudeMesh &gt; log.extrudeMesh 2&gt;&amp;1 </span><br><span class="line">decomposePar &gt; log.decomposePar 2&gt;&amp;1 </span><br><span class="line">mpirun foamRun -parallel &gt; log.foamRun 2&gt;&amp;1 </span><br><span class="line">reconstructPar &gt; log.reconstructPar 2&gt;&amp;1 </span><br></pre></td></tr></table></figure>

<p>在<code>case</code>目录下运行<code>sbatch ./job.sh</code>命令即可提交任务。</p>
<h2 id="OpenFOAM-v1812"><a href="#OpenFOAM-v1812" class="headerlink" title="OpenFOAM-v1812"></a><code>OpenFOAM-v1812</code></h2><h3 id="下载源代码-5"><a href="#下载源代码-5" class="headerlink" title="下载源代码"></a>下载源代码</h3><p>以下为<code>download.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">cd $SCRIPTDIR/source</span><br><span class="line">wget https://sourceforge.net/projects/openfoam/files/v1812/OpenFOAM-v1812.tgz</span><br><span class="line">wget https://sourceforge.net/projects/openfoam/files/v1812/ThirdParty-v1812.tgz</span><br><span class="line">tar -zxf OpenFOAM-v1812.tgz</span><br><span class="line">tar -zxf ThirdParty-v1812.tgz</span><br><span class="line">rm -rf OpenFOAM-v1812.tgz ThirdParty-v1812.tgz</span><br></pre></td></tr></table></figure>

<h3 id="安装-5"><a href="#安装-5" class="headerlink" title="安装"></a>安装</h3><p>以下为<code>install.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载cmake环境</span></span><br><span class="line">module load compiler/cmake/3.23.3</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装目录所需环境变量</span></span><br><span class="line">INSTALL_PATH=$SCRIPTDIR</span><br><span class="line">INSTALL_PATH_NEW=$&#123;INSTALL_PATH//\//\\\/&#125;</span><br><span class="line">FOAM_NAME=OpenFOAM-v1812</span><br><span class="line">THIRD_NAME=ThirdParty-v1812</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入安装目录</span></span><br><span class="line">cd $INSTALL_PATH/app</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝源代码至安装目录</span></span><br><span class="line">rm -rf ./*</span><br><span class="line">cp -r ../source/$FOAM_NAME ./</span><br><span class="line">cp -r ../source/$THIRD_NAME ./</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改etc/bashrc文件</span></span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT=OpenFOAM/export\ MY_INSTALL_PATH=&#x27;$INSTALL_PATH_NEW&#x27;\/app\nexport\ WM_PROJECT=OpenFOAM/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/HOME\/OpenFOAM/MY_INSTALL_PATH/g&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/HOME\/\$WM_PROJECT/MY_INSTALL_PATH/g&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $FOAM_NAME/etc/bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译第三方程序</span></span><br><span class="line">cd $THIRD_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.thirdparty-v1812 2&gt;&amp;1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译OpenFOAM</span></span><br><span class="line">cd ../$FOAM_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.openfoam-v1812 2&gt;&amp;1</span><br></pre></td></tr></table></figure>

<h3 id="加载环境变量-5"><a href="#加载环境变量-5" class="headerlink" title="加载环境变量"></a>加载环境变量</h3><p>以下为<code>env.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $SCRIPTDIR/app/OpenFOAM-v1812/etc/bashrc</span><br></pre></td></tr></table></figure>

<h3 id="软件测试-5"><a href="#软件测试-5" class="headerlink" title="软件测试"></a>软件测试</h3><p>以下为<code>job.sh</code>脚本内容，该脚本位于<code>case</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -J cavity</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -p xahctar</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -N 2</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --ntasks-per-node=2</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">系统默认环境，无需purge</span></span><br><span class="line">source ../scripts/env.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝官方自带算例文件</span></span><br><span class="line">rm -rf ./cavity</span><br><span class="line">cp -r $FOAM_TUTORIALS/incompressible/icoFoam/cavity/cavity .</span><br><span class="line"></span><br><span class="line">cd cavity</span><br><span class="line">cp $FOAM_TUTORIALS/incompressible/icoFoam/cavityMappingTest/system/coarseMesh/decomposeParDict ./system # 自带算例为串行算例，将其修改为并行算例</span><br><span class="line">sed -i &#x27;s/20/100/g&#x27; system/blockMeshDict # 增大网格分辨率</span><br><span class="line">sed -i &#x27;s/0\.005/0\.00002/g&#x27; system/controlDict # 保证计算稳定</span><br><span class="line">sed -i &#x27;s/20/5000/g&#x27; system/controlDict # 设置输出文件间隔</span><br><span class="line">sed -i &#x27;s/0\.5/1/g&#x27; system/controlDict # 设置计算时间</span><br><span class="line"></span><br><span class="line">blockMesh &gt; log.blockMesh 2&gt;&amp;1 # 划分网格</span><br><span class="line">decomposePar &gt; log.decomposePar 2&gt;&amp;1 # 并行分区</span><br><span class="line">mpirun icoFoam -parallel &gt; log.icoFoam 2&gt;&amp;1 # 开始计算</span><br><span class="line">reconstructPar &gt; log.reconstructPar 2&gt;&amp;1 #将并行计算的数据归纳，便于后处理</span><br></pre></td></tr></table></figure>

<p>在<code>case</code>目录下运行<code>sbatch ./job.sh</code>命令即可提交任务。</p>
]]></content>
      <categories>
        <category>软件安装</category>
      </categories>
      <tags>
        <tag>OpenFOAM</tag>
      </tags>
  </entry>
  <entry>
    <title>常用文件</title>
    <url>/2023/09/13/%E5%B8%B8%E7%94%A8%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, the password is incorrect! Please try again." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="d9b35fceab14b451d8ffb655fd77eb4109a702a5f6f952a8583561e65f8ba906">517bb76ea955ce0930304e47a133ff7862ea64b2feb79ac33d6b3e179ea730012219a7d40f170574ec77976ce0458da00ff65c47e112e9ac524cbc97764c3f0b478ac810561a12998cfec2111a6266d7461d12923b9a026d1cc96997755acaa9bd82c5c2484a0d4252a555205e261a92e7adb656309a222173e49154e4b84c102cd8eebea4b38d183e08dbd27ce378761f24b0d4829b7fcd7a1c2d4997ee7df788c5e0f6dd7134608b9a3fee164820c70bd0fbfd40c6bcecee5629c7b32103b4ab96d1688aefe80302d3b0a05c9e9ece064a038e9a0b69dbed2e08e6af68ff8d6334bf4df3f82113adab39de8b9058f1217c9c0f5a4f7dc0547b205e8f86f6f14692c015da27a6ce1a31daf185554e995f1235b9990b1d0fc49b7e3471b6acac490a75baa87d49be6b1d68c8f882c2189c2ec2fc204c083ec5b63070cc0538fc1ca82a052b5853acc44035cf7438e76b92a8cfa423452552a0862435a8e6aab10a36020c565e7116f184b75e95acd8b6d679a9059297e736a71514e21bc5f237e6eb77052fc752522fffd1cdd9d41420bff9c8d5acbba5548a1e4a27ccd2619c696876b8bb00b443ea308019b34d7f513ccde4c5c59c612ec08e6bdf526449f2495c025f9fdbf7a75dc5cf0b117a95a0cddc1f8e783c4c39cd5da9362dec756d69d5e771b26d6197e8f397ff701612bd88a3b3123a091d0fa975117faad87d8fb4131c0f287db5c854e4c5245b4b6d148fab734b5a336d77756f2dc7f718ad57f37f3c154137fee483b6ac6e8d1160a9d3f8d1bee4c7402e433eb052f25a0a74633a0e0b2c261b3963291db244e5ab1badbd3e1553cd608dc65307e3c9cacd5013a01775782d8cbb68678896481ac74f061d2eb14e960d8568998580787b6b930259e35f7d3c17e6ee6666f9df8c49286b52295f6be794e8918a8f21dbbb342c26b0fa0e40361757a08996765c522ae65ecaedc949697c4da63fc4e9293bd4d13f38e84ce807949e7c61356096365a8bd0e19619895ea14ba74c839425a58ca47ade558e762bd6beb5eb96533a115f1df1c7346147937b8bb5cd315954d67cf4</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Please input the password</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>时间记录</title>
    <url>/2023/09/21/%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, the password is incorrect! Please try again." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="8f295a85b8a6b1da4fa615a0fa40bc4af1beb5abb2e5e04a7188ffb63855c896">afa383dd9f0877404a4bf59bf687fb98a8934981e238cd3b56d355daac35775c8b0a1e206f216008415990479f142500299f0e6e2adc421f9fa8df4e9301c0777e83db503b8b76c4e14955a056906c183bc2b9f8022eb42f0bd0fc17f75fa558af7b7e08ef21a3c5d45fbee793b432d1dd4eb364d80ca23bac213e37d2751676c55a8282774ddd5ba241d3f87c91016c1af1b311c63823127847103b6850eaecd29a83a238e16a196ad726897355024d54b45c1c807a40914de820298b602fbb4eef9e37d39071bf99b31fcd71567ea52e3196f6ba02b6ad7b91a3cf18aee40765a888b827005602d86f4bd65ed9567b</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Please input the password</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>private</tag>
      </tags>
  </entry>
</search>
