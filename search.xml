<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>LaTeX记录</title>
    <url>/2023/12/18/LaTeX%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="在latex中使用算法伪代码">在LaTeX中使用算法伪代码</h2>
<h3 id="引入宏包">引入宏包</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;algorithm&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;algorithmic&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="创建伪代码环境">创建伪代码环境</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;algorithm&#125;[htbp]</span><br><span class="line">    <span class="keyword">\caption</span>&#123;Example Pseudocode&#125; <span class="comment">% 可替换为中文</span></span><br><span class="line"><span class="keyword">\end</span>&#123;algorithm&#125;</span><br></pre></td></tr></table></figure>
<h3 id="创建伪代码">创建伪代码</h3>
<figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;algorithm&#125;[htbp]</span><br><span class="line">    <span class="keyword">\caption</span>&#123;Example Pseudocode&#125; <span class="comment">% 可替换为中文</span></span><br><span class="line">    <span class="keyword">\begin</span>&#123;algorithmic&#125;[1] <span class="comment">% 这里的[1]代表显示每行的行号，若改为[2]，则代表每2行显示一次行号</span></span><br><span class="line">        <span class="keyword">\STATE</span> <span class="built_in">$</span>x<span class="keyword">\gets</span>0<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">% if语句</span></span><br><span class="line">        <span class="keyword">\IF</span> &#123;<span class="built_in">$</span>x<span class="keyword">\leq</span> 0<span class="built_in">$</span>&#125;</span><br><span class="line">        <span class="keyword">\STATE</span> <span class="built_in">$</span>x<span class="keyword">\gets</span> x+1<span class="built_in">$</span></span><br><span class="line">        <span class="keyword">\ELSIF</span>&#123;<span class="built_in">$</span>x<span class="keyword">\geq</span>1<span class="built_in">$</span>&#125;</span><br><span class="line">        <span class="keyword">\STATE</span> <span class="built_in">$</span>x<span class="keyword">\gets</span> x-1<span class="built_in">$</span></span><br><span class="line">        <span class="keyword">\ELSE</span> </span><br><span class="line">        <span class="keyword">\STATE</span> <span class="built_in">$</span>x<span class="keyword">\gets</span> 2x<span class="built_in">$</span></span><br><span class="line">        <span class="keyword">\ENDIF</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">% for语句</span></span><br><span class="line">        <span class="keyword">\FOR</span> &#123;<span class="built_in">$</span>x = 0, 1, ..., 10<span class="built_in">$</span>&#125;</span><br><span class="line">        <span class="keyword">\STATE</span> <span class="built_in">$</span>x<span class="keyword">\gets</span> x+1<span class="built_in">$</span></span><br><span class="line">        <span class="keyword">\ENDFOR</span></span><br><span class="line">    <span class="keyword">\end</span>&#123;algorithmic&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;algorithm&#125;</span><br></pre></td></tr></table></figure>
<h3 id="添加输入输出可选">添加输入输出（可选）</h3>
<p>首先重定义关键字 <figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\floatname</span>&#123;algorithm&#125;&#123;&#123;Algorithm&#125;&#125; <span class="comment">% 可将&#x27;Algorithm&#x27;修改为&#x27;算法&#x27;</span></span><br><span class="line"><span class="keyword">\renewcommand</span>&#123;<span class="keyword">\algorithmicrequire</span>&#125;&#123;<span class="keyword">\textbf</span>&#123;Input:&#125;&#125; <span class="comment">% 可将&#x27;Input&#x27;修改为&#x27;输入&#x27;</span></span><br><span class="line"><span class="keyword">\renewcommand</span>&#123;<span class="keyword">\algorithmicensure</span>&#125;&#123;<span class="keyword">\textbf</span>&#123;Output:&#125;&#125; <span class="comment">% 可将&#x27;Output&#x27;修改为&#x27;输出&#x27;</span></span><br></pre></td></tr></table></figure></p>
<p>之后在代码环境中添加相应语句即可，即 <figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\begin</span>&#123;algorithm&#125;[htbp]</span><br><span class="line">    <span class="keyword">\caption</span>&#123;Example Pseudocode&#125; <span class="comment">% 可替换为中文</span></span><br><span class="line">    <span class="keyword">\begin</span>&#123;algorithmic&#125;[1] <span class="comment">% 这里的[1]代表显示每行的行号，若改为[2]，则代表每2行显示一次行号</span></span><br><span class="line">        <span class="keyword">\REQUIRE</span>&#123;<span class="built_in">$</span>y<span class="built_in">$</span>&#125; <span class="comment">% 输入</span></span><br><span class="line">        <span class="keyword">\ENSURE</span>&#123;<span class="built_in">$</span>x<span class="built_in">$</span>&#125;  <span class="comment">% 输出</span></span><br><span class="line">        <span class="keyword">\STATE</span> <span class="built_in">$</span>x<span class="keyword">\gets</span>0<span class="built_in">$</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">% if语句</span></span><br><span class="line">        <span class="keyword">\IF</span> &#123;<span class="built_in">$</span>x<span class="keyword">\leq</span> 0<span class="built_in">$</span>&#125;</span><br><span class="line">        <span class="keyword">\STATE</span> <span class="built_in">$</span>x<span class="keyword">\gets</span> x+1<span class="built_in">$</span></span><br><span class="line">        <span class="keyword">\ELSIF</span>&#123;<span class="built_in">$</span>x<span class="keyword">\geq</span>1<span class="built_in">$</span>&#125;</span><br><span class="line">        <span class="keyword">\STATE</span> <span class="built_in">$</span>x<span class="keyword">\gets</span> x-1<span class="built_in">$</span></span><br><span class="line">        <span class="keyword">\ELSE</span> </span><br><span class="line">        <span class="keyword">\STATE</span> <span class="built_in">$</span>x<span class="keyword">\gets</span> 2x<span class="built_in">$</span></span><br><span class="line">        <span class="keyword">\ENDIF</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">% for语句</span></span><br><span class="line">        <span class="keyword">\FOR</span> &#123;<span class="built_in">$</span>x = 0, 1, ..., 10<span class="built_in">$</span>&#125;</span><br><span class="line">        <span class="keyword">\STATE</span> <span class="built_in">$</span>x<span class="keyword">\gets</span> x+1<span class="built_in">$</span></span><br><span class="line">        <span class="keyword">\ENDFOR</span></span><br><span class="line">    <span class="keyword">\end</span>&#123;algorithmic&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;algorithm&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="伪代码跨页">伪代码跨页</h3>
<p>当伪代码长度过长时，需要跨页显示，解决方法如下 1. 在<code>usepackage</code>的地方粘贴如下代码 <figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\makeatletter</span></span><br><span class="line"><span class="keyword">\newenvironment</span>&#123;breakablealgorithm&#125;</span><br><span class="line">  &#123;<span class="comment">% \begin&#123;breakablealgorithm&#125;</span></span><br><span class="line">   <span class="keyword">\begin</span>&#123;center&#125;</span><br><span class="line">     <span class="keyword">\refstepcounter</span>&#123;algorithm&#125;<span class="comment">% New algorithm</span></span><br><span class="line">     <span class="keyword">\hrule</span> height.8pt depth0pt <span class="keyword">\kern</span>2pt<span class="comment">% \@fs@pre for \@fs@ruled</span></span><br><span class="line">     <span class="keyword">\renewcommand</span>&#123;<span class="keyword">\caption</span>&#125;[2][<span class="keyword">\relax</span>]&#123;<span class="comment">% Make a new \caption</span></span><br><span class="line">       &#123;<span class="keyword">\raggedright</span><span class="keyword">\textbf</span>&#123;<span class="keyword">\fname@algorithm</span>~<span class="keyword">\thealgorithm</span>&#125; <span class="params">##2</span><span class="keyword">\par</span>&#125;<span class="comment">%&#x27;\fname@algorithm&#x27;可替换为&#x27;算法&#x27;，同时可删除&#x27;\floatname&#123;algorithm&#125;&#123;&#123;Algorithm&#125;&#125;&#x27;语句</span></span><br><span class="line">       <span class="keyword">\ifx</span><span class="keyword">\relax</span><span class="params">##1</span><span class="keyword">\relax</span> <span class="comment">% #1 is \relax</span></span><br><span class="line">         <span class="keyword">\addcontentsline</span>&#123;loa&#125;&#123;algorithm&#125;&#123;<span class="keyword">\protect</span><span class="keyword">\numberline</span>&#123;<span class="keyword">\thealgorithm</span>&#125;<span class="params">##2</span>&#125;<span class="comment">%</span></span><br><span class="line">       <span class="keyword">\else</span> <span class="comment">% #1 is not \relax</span></span><br><span class="line">         <span class="keyword">\addcontentsline</span>&#123;loa&#125;&#123;algorithm&#125;&#123;<span class="keyword">\protect</span><span class="keyword">\numberline</span>&#123;<span class="keyword">\thealgorithm</span>&#125;<span class="params">##1</span>&#125;<span class="comment">%</span></span><br><span class="line">       <span class="keyword">\fi</span></span><br><span class="line">       <span class="keyword">\kern</span>2pt<span class="keyword">\hrule</span><span class="keyword">\kern</span>2pt</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;&#123;<span class="comment">% \end&#123;breakablealgorithm&#125;</span></span><br><span class="line">     <span class="keyword">\kern</span>2pt<span class="keyword">\hrule</span><span class="keyword">\relax</span><span class="comment">% \@fs@post for \@fs@ruled</span></span><br><span class="line">   <span class="keyword">\end</span>&#123;center&#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">\makeatother</span></span><br></pre></td></tr></table></figure> 2. 确保导入了以下宏包 <figure class="highlight latex"><table><tr><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;algorithm&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;algorithmic&#125; <span class="comment">% \usepackage&#123;algorithmicx&#125;</span></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;algpseudocode&#125;</span><br></pre></td></tr></table></figure> 3. 将<code>\begin&#123;algorithm&#125;</code>和<code>\end&#123;algorithm&#125;</code>替换成<code>\begin&#123;breakablealgorithm&#125;</code>和<code>\end&#123;breakablealgorithm&#125;</code>即可。</p>
<p>注意：在实际使用时，可能会出现与正文间距过近的情况，因而可能需要在<code>\begin&#123;breakablealgorithm&#125;</code>前和<code>\end&#123;breakablealgorithm&#125;</code>后添加部分空行，以保证和前后文的间距。</p>
<h3 id="参考文献">参考文献</h3>
<ol type="1">
<li><a href="https://blog.csdn.net/weixin_41352742/article/details/121263264">LaTeX算法流程中英文伪代码</a></li>
<li><a href="https://welts.xyz/2022/01/17/pseudocode/">基于LaTeX的伪代码书写</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/608947324">LaTeX伪代码跨页展示</a></li>
<li><a href="https://tex.stackexchange.com/questions/33866/algorithm-tag-and-page-break">LaTeX伪代码跨页展示2</a></li>
</ol>
]]></content>
      <categories>
        <category>软件使用</category>
      </categories>
      <tags>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>Github Pages+hexo+NexT个人博客搭建及配置</title>
    <url>/2023/09/12/Github-Pages-hexo-NexT%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<blockquote>
<p>Github Pages 是 github 提供的免费静态博客平台，使用 hexo 静态博客 + NexT 主题能够快速地搭建优雅的博客。在此记录下搭建博客的过程。</p>
</blockquote>
<span id="more"></span>
<h2 id="创建博客">创建博客</h2>
<ol type="1">
<li>首先在<a href="https://github.com">github</a>中创建一个仓库，命名为<code>&lt;your_name&gt;.github.io</code></li>
<li>在本机安装好git、ssh、node、hexo，创建博客文件夹，安装需要的插件 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g # 安装hexo</span><br><span class="line">hexo init blog_folder</span><br><span class="line">cd blog_folder</span><br><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save # hexo的git插件</span><br></pre></td></tr></table></figure></li>
<li>修改<code>_config.yml</code>文件中的<code>Site</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Site</span></span><br><span class="line">title: # 根据个人喜好设置</span><br><span class="line">subtitle: &#x27;&#x27; # 根据个人喜好设置</span><br><span class="line">description: &#x27;&#x27; # 根据个人喜好设置</span><br><span class="line">keywords: # 根据个人喜好设置</span><br><span class="line">author: # 根据个人喜好设置</span><br><span class="line">language: zh-CN # 设置为中文</span><br><span class="line">timezone: &#x27;&#x27; # 设置时区</span><br></pre></td></tr></table></figure></li>
<li>修改<code>_config.yml</code>文件中的<code>URL</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">url: https://&lt;your_name&gt;.github.io # 也可以设置为其他网址</span><br></pre></td></tr></table></figure></li>
<li>修改<code>_config.yml</code>文件中的<code>Deployment</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Deployment</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Docs: https://hexo.io/docs/deployment.html</span></span></span><br><span class="line">deploy:</span><br><span class="line">  type: &#x27;git&#x27;</span><br><span class="line">  repo: git@github.com:&lt;your_name&gt;/&lt;your_name&gt;.github.io.git # 设置为你的仓库地址</span><br><span class="line">  branch: master # 设置为想要推送的分支，不建议修改</span><br></pre></td></tr></table></figure></li>
</ol>
<p>至此，博客初始状态创建完毕。</p>
<h2 id="使用next主题">使用<code>NexT</code>主题</h2>
<ol type="1">
<li>克隆<code>NexT</code>主题到本地 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">请首先进入到blog_folder目录下</span></span><br><span class="line">git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></li>
<li>修改<code>_config.yml</code>文件中的<code>Extensions</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></li>
<li>在<code>_config.yml</code>文件中添加以下内容 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Third-party plugins: search</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br><span class="line">  format: html</span><br><span class="line"></span><br><span class="line">symbols_count_time:</span><br><span class="line">  symbols: true</span><br><span class="line">  time: true</span><br><span class="line">  total_symbols: true</span><br><span class="line">  total_time: true</span><br><span class="line">  awl: 4</span><br><span class="line">  wpm: 275</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="配置next主题">配置<code>NexT</code>主题</h2>
<ol type="1">
<li>修改<code>themes/next/_config.yml</code>文件中的<code>minify</code>参数为<code>true</code> <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">minify: true</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>Scheme Settings</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Schemes</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">scheme: Muse</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">scheme: Mist</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">scheme: Pisces</span></span><br><span class="line">scheme: Gemini # 使用Gemini格式</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>Menu Settings</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home # 主页</span><br><span class="line">  categories: /categories/ || fa fa-th # 文档分类</span><br><span class="line">  tags: /tags/ || fa fa-tags # 文档标签</span><br><span class="line">  archives: /archives/ || fa fa-archive # 时间轴</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">commonweal: /404/ || fa fa-heartbeat</span></span><br><span class="line">  about: /about/ || fa fa-user # 关于</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>menu_settings</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">menu_settings:</span><br><span class="line">  icons: true</span><br><span class="line">  badges: true</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>social</code>部分（按需修改）</li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>footer</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">footer:</span><br><span class="line">since: 2023 # 博客开始时间</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Icon between year and copyright info.</span></span><br><span class="line">icon:</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Icon name <span class="keyword">in</span> Font Awesome. See: https://fontawesome.com/icons</span></span><br><span class="line">name: fa fa-heart</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">If you want to animate the icon, <span class="built_in">set</span> it to <span class="literal">true</span>.</span></span><br><span class="line">animated: true # 产生动画效果</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Change the color of icon, using Hex Code.</span></span><br><span class="line">color: &quot;#ff0000&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">If not defined, `author` from Hexo `_config.yml` will be used.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Set to `<span class="literal">false</span>` to <span class="built_in">disable</span> the copyright statement.</span></span><br><span class="line">copyright:</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Powered by Hexo &amp; NexT</span></span><br><span class="line">powered: false</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>post_meta</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">post_meta:</span><br><span class="line">  item_text: true</span><br><span class="line">  created_at: true</span><br><span class="line">  updated_at:</span><br><span class="line">    enable: true</span><br><span class="line">    another_day: false # 设置为false，只要文件发生修改即可显示修改时间</span><br><span class="line">  categories: true</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>back2top</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">back2top: # 显示浏览进度</span><br><span class="line">  enable: true             </span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Back to top <span class="keyword">in</span> sidebar.</span></span><br><span class="line">  sidebar: true</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Scroll percent label <span class="keyword">in</span> b2t button.</span></span><br><span class="line">  scrollpercent: true</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>reading_progress</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">reading_progress: # 在顶部显示浏览进度</span><br><span class="line">  enable: true</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Available values: left | right</span></span><br><span class="line">  start_at: left</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">Available values: top | bottom</span></span><br><span class="line">  position: top</span><br><span class="line">  reversed: false</span><br><span class="line">  color: &quot;#37c6c0&quot;</span><br><span class="line">  height: 3px</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>github_banner</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">github_banner: # 在右上角显示github</span><br><span class="line">  enable: true</span><br><span class="line">  permalink: https://github.com/&lt;your-name&gt;</span><br><span class="line">  title: Follow me on github # 可以更改</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/_config.yml</code>文件中的<code>busuanzi_count</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">busuanzi_count: # 统计浏览量</span><br><span class="line">  enable: true</span><br><span class="line">  total_visitors: true</span><br><span class="line">  total_visitors_icon: fa fa-user</span><br><span class="line">  total_views: true</span><br><span class="line">  total_views_icon: fa fa-eye</span><br><span class="line">  post_views: true</span><br><span class="line">  post_views_icon: far fa-eye</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/languages/zh-CN.yml</code>文件中的<code>menu</code>部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">menu: # 修改目录的中文显示</span><br><span class="line">  home: 首页</span><br><span class="line">  archives: 时间轴</span><br><span class="line">  categories: 文章分类</span><br><span class="line">  tags: 文章标签</span><br><span class="line">  about: 关于作者</span><br><span class="line">  search: 搜索</span><br><span class="line">  schedule: 日历</span><br><span class="line">  sitemap: 站点地图</span><br><span class="line">  commonweal: 公益 404</span><br></pre></td></tr></table></figure></li>
<li>在<code>themes/next/layout/_partials/footer.njk</code>文件中添加以下部分 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&lt;!-- 网站运行时间的设置 --&gt;</span><br><span class="line">&lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;</span><br><span class="line">&lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt;  Sometimes your whole life boils down to one insame move.</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var now = new Date();</span><br><span class="line">    function createtime() &#123;</span><br><span class="line">        var grt= new Date(&quot;09/12/2023 14:00:00&quot;);//此处修改你的建站时间或者网站上线时间</span><br><span class="line">        now.setTime(now.getTime()+250);</span><br><span class="line">        days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days);</span><br><span class="line">        hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours);</span><br><span class="line">        if(String(hnum).length ==1 )&#123;hnum = &quot;0&quot; + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum);</span><br><span class="line">        mnum = Math.floor(minutes); if(String(mnum).length ==1 )&#123;mnum = &quot;0&quot; + mnum;&#125;</span><br><span class="line">        seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum);</span><br><span class="line">        snum = Math.round(seconds); if(String(snum).length ==1 )&#123;snum = &quot;0&quot; + snum;&#125;</span><br><span class="line">        document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;;</span><br><span class="line">        document.getElementById(&quot;times&quot;).innerHTML = hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">setInterval(&quot;createtime()&quot;,250);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="安装插件">安装插件</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save # 本地搜索需要</span><br><span class="line">npm install hexo-word-counter --save # 字数时间统计</span><br></pre></td></tr></table></figure>
<h2 id="生成网页">生成网页</h2>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean # 清楚缓存</span><br><span class="line">hexo g # 生成网页</span><br><span class="line">hexo d # 发布到github等</span><br><span class="line">hexo s # 本地查看</span><br></pre></td></tr></table></figure>
<h2 id="博文加密">博文加密</h2>
<ol type="1">
<li>安装插件 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-blog-encrypt</span><br></pre></td></tr></table></figure></li>
<li>在<code>_config.yml</code>文件中添加以下内容 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">encrypt:</span><br><span class="line">  enable: true</span><br><span class="line">  silent: true # 不输出log信息</span><br><span class="line">  theme: xray # 主题</span><br><span class="line">  tags:</span><br><span class="line">  - &#123;name: xxx, password: xxxx&#125; # 当文章指定了xxx标签后，文章自动加密，密码为xxxx</span><br><span class="line">  abstract: There&#x27;s something hidden here.</span><br><span class="line">  message: Please input the password</span><br><span class="line">  wrong_pass_message: Sorry, the password is incorrect! Please try again.</span><br></pre></td></tr></table></figure></li>
<li>修改<code>scaffolds/post.md</code>文件 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">updated: &#123;&#123; date &#125;&#125;</span><br><span class="line">tags: </span><br><span class="line">categories: </span><br><span class="line">password: </span><br><span class="line">---</span><br></pre></td></tr></table></figure></li>
<li>修改<code>themes/next/layout/_macro/sidebar.njk</code>文件（目录问题） <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">&#123;%- if (page.encrypt) %&#125;</span><br><span class="line">  &#123;%- set toc = toc(page.origin, &#123; class: &#x27;nav&#x27;, list_number: page.toc.number, max_depth: page.toc.max_depth &#125;) %&#125;</span><br><span class="line">&#123;%- else %&#125;</span><br><span class="line">  &#123;%- set toc = toc(page.content, &#123; class: &#x27;nav&#x27;, list_number: page.toc.number, max_depth: page.toc.max_depth &#125;) %&#125; # 搜索这一行的内容，替换为这一段即可</span><br><span class="line">&#123;%- endif %&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="使用数学公式">使用数学公式</h2>
<h3 id="安装-hexo-renderer-pandoc">安装 <code>hexo-renderer-pandoc</code></h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 卸载Hexo默认渲染插件：</span><br><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line"></span><br><span class="line"># 安装pandoc渲染插件：</span><br><span class="line">npm install hexo-renderer-pandoc --save</span><br></pre></td></tr></table></figure>
<h3 id="配置使用mathjax">配置使用<code>mathjax</code></h3>
<p>修改<code>themes/next/_config.yml</code>文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">math:</span><br><span class="line">  ...</span><br><span class="line">  mathjax:</span><br><span class="line">    enable: true</span><br><span class="line"></span><br><span class="line">    # Next v6.3.0 后的版本 tags 要设置成 ams</span><br><span class="line">    # Available values: none | ams | all</span><br><span class="line">    tags: ams</span><br></pre></td></tr></table></figure>
<h3 id="安装pandoc">安装<code>pandoc</code></h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install pandoc</span><br></pre></td></tr></table></figure>
<h3 id="添加文件头">添加文件头</h3>
<p>在需要使用数学公式的博客的文件头中添加<code>mathjax: true</code>语句以支持数学公式的显示</p>
<h2 id="主要参考连接">主要参考连接</h2>
<ol type="1">
<li><a href="https://theme-next.js.org/docs/">NexT主题官方文档</a></li>
<li><a href="https://www.itfanr.cc/2021/04/16/hexo-blog-article-encryption/">Hexo博客加密</a></li>
<li><a href="https://www.xianlongok.site/post/367fa45b/">Hexo数学公式</a></li>
</ol>
]]></content>
      <categories>
        <category>博客搭建</category>
      </categories>
      <tags>
        <tag>Github Pages</tag>
        <tag>hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>Mathematica记录</title>
    <url>/2023/12/18/Mathematica%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="求解未知变量">求解未知变量</h2>
<figure class="highlight mathematica"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Solve</span><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="number">3</span><span class="operator">*</span><span class="variable">x</span> <span class="operator">+</span> <span class="number">4</span><span class="operator">*</span><span class="variable">y</span> <span class="operator">==</span> <span class="number">20</span><span class="operator">,</span> </span><br><span class="line">        <span class="number">2</span><span class="operator">*</span><span class="variable">x</span> <span class="operator">+</span> <span class="number">6</span><span class="operator">*</span><span class="variable">y</span> <span class="operator">==</span> <span class="number">40</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="operator">,</span> </span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="variable">x</span><span class="operator">,</span> </span><br><span class="line">        <span class="variable">y</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>
<p>注：如有多个限制条件可继续写入第一个<code>&#123;&#125;</code>内，相应的未知变量写入第二个<code>&#123;&#125;</code>内。</p>
<span id="more"></span>
]]></content>
      <categories>
        <category>软件使用</category>
      </categories>
      <tags>
        <tag>Mathematica</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenFOAM使用笔记</title>
    <url>/2024/01/23/OpenFOAM%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="气体常数计算">气体常数计算</h2>
<p>宏观方法中，完全气体满足关系<span class="math display">\[p = \rho R T,\]</span> 其中<span class="math inline">\(R\)</span>的计算公式为<span class="math display">\[R = \frac{R_g}{M},\]</span> <span class="math inline">\(R_g = 8.31446261815324 J/(K \cdot mol)\)</span>，<span class="math inline">\(M\)</span>为气体的摩尔质量（单位一般为<span class="math inline">\(g/mol\)</span>）。</p>
<span id="more"></span>
]]></content>
  </entry>
  <entry>
    <title>OpenFOAM安装</title>
    <url>/2023/09/12/OpenFOAM%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<blockquote>
<p>2023年9月1日至2023年9月7日在曙光超算上部署多个版本的<code>OpenFOAM</code>，在此记录下安装过程。</p>
</blockquote>
<p>假设软件目录仿照如下方式进行设置（以<code>OpenFOAM-7</code>为例），且以下目录均已存在。 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v7</span><br><span class="line"> |---- app      # 存放可执行文件</span><br><span class="line"> |---- case     # 存放算例文件</span><br><span class="line"> |---- doc      # 存放说明文档</span><br><span class="line"> |---- scripts  # 存放脚本文件</span><br><span class="line"> |---- source   # 存放源代码文件</span><br></pre></td></tr></table></figure></p>
<span id="more"></span>
<h2 id="openfoam-7"><code>OpenFOAM-7</code></h2>
<h3 id="下载源代码">下载源代码</h3>
<p>以下为<code>download.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">cd $SCRIPTDIR/source</span><br><span class="line"></span><br><span class="line">git clone https://github.com/OpenFOAM/OpenFOAM-7.git</span><br><span class="line">git clone https://github.com/OpenFOAM/ThirdParty-7.git</span><br></pre></td></tr></table></figure>
<h3 id="安装">安装</h3>
<p>以下为<code>install.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line">module load compiler/intel/2021.3.0 # intel-2021</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装目录</span></span><br><span class="line">INSTALL_PATH=$SCRIPTDIR</span><br><span class="line">INSTALL_PATH_NEW=$&#123;INSTALL_PATH//\//\\\/&#125;</span><br><span class="line">FOAM_NAME=OpenFOAM-7</span><br><span class="line">THIRD_NAME=ThirdParty-7</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入安装目录</span></span><br><span class="line">cd $INSTALL_PATH/app</span><br><span class="line">rm -rf ./*</span><br><span class="line">cp -r ../source/$FOAM_NAME ./</span><br><span class="line">cp -r ../source/$THIRD_NAME ./</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件</span></span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT=OpenFOAM/export\ MY_INSTALL_PATH=&#x27;$INSTALL_PATH_NEW&#x27;\/app\nexport\ WM_PROJECT=OpenFOAM/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ FOAM_INST_DIR=\$HOME\/\$WM_PROJECT/export\ FOAM_INST_DIR=\$MY_INSTALL_PATH/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT_USER_DIR=\$HOME\/\$WM_PROJECT\/\$USER-\$WM_PROJECT_VERSION/export\ WM_PROJECT_USER_DIR=\$WM_PROJECT_INST_DIR\/\$USER-\$WM_PROJECT_VERSION/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_COMPILER=Gcc/export WM_COMPILER=Icc/&#x27; $FOAM_NAME/etc/bashrc # 使用intel编译器</span><br><span class="line">sed -i &#x27;s/export\ WM_MPLIB=SYSTEMOPENMPI/export\ WM_MPLIB=INTELMPI\nMPI_ROOT=\$I_MPI_ROOT/&#x27; $FOAM_NAME/etc/bashrc # 使用intelMPI</span><br><span class="line">echo &#x27;export WM_CC=icc&#x27; &gt;&gt; $FOAM_NAME/etc/bashrc # 使用intel编译器编译第三方库</span><br><span class="line">echo &#x27;export WM_CXX=icpc&#x27; &gt;&gt; $FOAM_NAME/etc/bashrc # 使用intel编译器编译第三方库</span><br><span class="line">sed -i &#x27;s/gcc/$(WM_CC)/g&#x27; $THIRD_NAME/etc/wmakeFiles/scotch/Makefile.inc.i686_pc_linux2.shlib-OpenFOAM # 使用intel编译器编译scotch</span><br><span class="line">sed -i &#x27;s/mpicc/mpiicc/g&#x27; $THIRD_NAME/etc/wmakeFiles/scotch/Makefile.inc.i686_pc_linux2.shlib-OpenFOAM # 使用intel编译器编译scotch</span><br><span class="line">sed -i &#x27;s/include64/include/g&#x27; $FOAM_NAME/wmake/rules/General/mplibINTELMPI64</span><br><span class="line">sed -i &#x27;s/lib64/lib\/release/g&#x27; $FOAM_NAME/wmake/rules/General/mplibINTELMPI64</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $FOAM_NAME/etc/bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译第三方程序</span></span><br><span class="line">cd $THIRD_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.thirdparty-7 2&gt;&amp;1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译OpenFOAM</span></span><br><span class="line">cd ../$FOAM_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.openfoam-7 2&gt;&amp;1</span><br></pre></td></tr></table></figure>
<h3 id="加载环境变量">加载环境变量</h3>
<p>以下为<code>env.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line">module load compiler/intel/2021.3.0 # intel-2021</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $SCRIPTDIR/app/OpenFOAM-7/etc/bashrc</span><br></pre></td></tr></table></figure>
<h3 id="软件测试">软件测试</h3>
<p>以下为<code>job.sh</code>脚本内容，该脚本位于<code>case</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -J cavity</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -p xahctar</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -N 2</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --ntasks-per-node=2</span></span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">source ../scripts/env.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝官方自带算例文件</span></span><br><span class="line">rm -rf ./cavity</span><br><span class="line">cp -r $FOAM_TUTORIALS/incompressible/icoFoam/cavity/cavity .</span><br><span class="line"></span><br><span class="line">cd cavity</span><br><span class="line">cp $FOAM_ETC/caseDicts/preProcessing/decomposeParDict ./system # 自带算例为串行算例，将其修改为并行算例</span><br><span class="line">sed -i &#x27;s/4/2/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/8/4/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/20/100/g&#x27; system/blockMeshDict # 增大网格分辨率</span><br><span class="line">sed -i &#x27;s/0\.005/0\.00004/g&#x27; system/controlDict # 保证计算稳定</span><br><span class="line">sed -i &#x27;s/20/2500/g&#x27; system/controlDict # 设置输出文件间隔</span><br><span class="line">sed -i &#x27;s/0\.5/1/g&#x27; system/controlDict # 设置计算时间</span><br><span class="line"></span><br><span class="line">blockMesh &gt; log.blockMesh 2&gt;&amp;1 # 划分网格</span><br><span class="line">decomposePar &gt; log.decomposePar 2&gt;&amp;1 # 并行分区</span><br><span class="line">mpirun icoFoam -parallel &gt; log.icoFoam 2&gt;&amp;1 # 开始计算</span><br><span class="line">reconstructPar &gt; log.reconstructPar 2&gt;&amp;1 #将并行计算的数据归纳，便于后处理</span><br></pre></td></tr></table></figure>
<p>在<code>case</code>目录下运行<code>sbatch ./job.sh</code>命令即可提交任务。</p>
<h2 id="openfoam-8"><code>OpenFOAM-8</code></h2>
<h3 id="下载源代码-1">下载源代码</h3>
<p>以下为<code>download.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">cd $SCRIPTDIR/source</span><br><span class="line"></span><br><span class="line">git clone https://github.com/OpenFOAM/OpenFOAM-8.git</span><br><span class="line">git clone https://github.com/OpenFOAM/ThirdParty-8.git</span><br></pre></td></tr></table></figure>
<h3 id="安装-1">安装</h3>
<p>以下为<code>install.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line">module load compiler/intel/2021.3.0 # intel-2021</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装目录</span></span><br><span class="line">INSTALL_PATH=$SCRIPTDIR</span><br><span class="line">INSTALL_PATH_NEW=$&#123;INSTALL_PATH//\//\\\/&#125;</span><br><span class="line">FOAM_NAME=OpenFOAM-8</span><br><span class="line">THIRD_NAME=ThirdParty-8</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入安装目录</span></span><br><span class="line">cd $INSTALL_PATH/app</span><br><span class="line">rm -rf ./*</span><br><span class="line">cp -r ../source/$FOAM_NAME ./</span><br><span class="line">cp -r ../source/$THIRD_NAME ./</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件</span></span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT=OpenFOAM/export\ MY_INSTALL_PATH=&#x27;$INSTALL_PATH_NEW&#x27;\/app\nexport\ WM_PROJECT=OpenFOAM/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ FOAM_INST_DIR=\$HOME\/\$WM_PROJECT/export\ FOAM_INST_DIR=\$MY_INSTALL_PATH/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT_USER_DIR=\$HOME\/\$WM_PROJECT\/\$USER-\$WM_PROJECT_VERSION/export\ WM_PROJECT_USER_DIR=\$WM_PROJECT_INST_DIR\/\$USER-\$WM_PROJECT_VERSION/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_COMPILER=Gcc/export WM_COMPILER=Icc/&#x27; $FOAM_NAME/etc/bashrc # 使用intel编译器</span><br><span class="line">sed -i &#x27;s/export\ WM_MPLIB=SYSTEMOPENMPI/export\ WM_MPLIB=INTELMPI\nMPI_ROOT=\$I_MPI_ROOT/&#x27; $FOAM_NAME/etc/bashrc # 使用intelMPI</span><br><span class="line">echo &#x27;export WM_CC=icc&#x27; &gt;&gt; $FOAM_NAME/etc/bashrc # 使用intel编译器编译第三方库</span><br><span class="line">echo &#x27;export WM_CXX=icpc&#x27; &gt;&gt; $FOAM_NAME/etc/bashrc # 使用intel编译器编译第三方库</span><br><span class="line">sed -i &#x27;s/gcc/$(WM_CC)/g&#x27; $THIRD_NAME/etc/wmakeFiles/scotch/Makefile.inc.i686_pc_linux2.shlib-OpenFOAM # 使用intel编译器编译scotch</span><br><span class="line">sed -i &#x27;s/mpicc/mpiicc/g&#x27; $THIRD_NAME/etc/wmakeFiles/scotch/Makefile.inc.i686_pc_linux2.shlib-OpenFOAM # 使用intel编译器编译scotch</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $FOAM_NAME/etc/bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译第三方程序</span></span><br><span class="line">cd $THIRD_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.thirdparty-8 2&gt;&amp;1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译OpenFOAM</span></span><br><span class="line">cd ../$FOAM_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.openfoam-8 2&gt;&amp;1</span><br></pre></td></tr></table></figure>
<h3 id="加载环境变量-1">加载环境变量</h3>
<p>以下为<code>env.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line">module load compiler/intel/2021.3.0 # intel-2021</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $SCRIPTDIR/app/OpenFOAM-8/etc/bashrc</span><br></pre></td></tr></table></figure>
<h3 id="软件测试-1">软件测试</h3>
<p>以下为<code>job.sh</code>脚本内容，该脚本位于<code>case</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -J cavity</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -p xahctar</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -N 2</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --ntasks-per-node=2</span></span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">source ../scripts/env.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝官方自带算例文件</span></span><br><span class="line">rm -rf ./cavity</span><br><span class="line">cp -r $FOAM_TUTORIALS/incompressible/icoFoam/cavity/cavity .</span><br><span class="line"></span><br><span class="line">cd cavity</span><br><span class="line">cp $FOAM_ETC/caseDicts/preProcessing/decomposeParDict ./system # 自带算例为串行算例，将其修改为并行算例</span><br><span class="line">sed -i &#x27;s/4/2/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/8/4/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/20/100/g&#x27; system/blockMeshDict # 增大网格分辨率</span><br><span class="line">sed -i &#x27;s/0\.005/0\.00004/g&#x27; system/controlDict # 保证计算稳定</span><br><span class="line">sed -i &#x27;s/20/2500/g&#x27; system/controlDict # 设置输出文件间隔</span><br><span class="line">sed -i &#x27;s/0\.5/1/g&#x27; system/controlDict # 设置计算时间</span><br><span class="line"></span><br><span class="line">blockMesh &gt; log.blockMesh 2&gt;&amp;1 # 划分网格</span><br><span class="line">decomposePar &gt; log.decomposePar 2&gt;&amp;1 # 并行分区</span><br><span class="line">mpirun icoFoam -parallel &gt; log.icoFoam 2&gt;&amp;1 # 开始计算</span><br><span class="line">reconstructPar &gt; log.reconstructPar 2&gt;&amp;1 #将并行计算的数据归纳，便于后处理</span><br></pre></td></tr></table></figure>
<p>在<code>case</code>目录下运行<code>sbatch ./job.sh</code>命令即可提交任务。</p>
<h2 id="openfoam-9"><code>OpenFOAM-9</code></h2>
<h3 id="下载源代码-2">下载源代码</h3>
<p>以下为<code>download.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">cd $SCRIPTDIR/source</span><br><span class="line"></span><br><span class="line">git clone https://github.com/OpenFOAM/OpenFOAM-9.git</span><br><span class="line">git clone https://github.com/OpenFOAM/ThirdParty-9.git</span><br></pre></td></tr></table></figure>
<h3 id="安装-2">安装</h3>
<p>以下为<code>install.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">由于安装时曙光超算上的intel编译器不支持C++14标准，因而采用gcc编译</span></span><br><span class="line">module load compiler/gcc/9.3.0 # 加载gcc</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装目录</span></span><br><span class="line">INSTALL_PATH=$SCRIPTDIR</span><br><span class="line">INSTALL_PATH_NEW=$&#123;INSTALL_PATH//\//\\\/&#125;</span><br><span class="line">FOAM_NAME=OpenFOAM-9</span><br><span class="line">THIRD_NAME=ThirdParty-9</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入安装目录</span></span><br><span class="line">cd $INSTALL_PATH/app</span><br><span class="line">rm -rf ./*</span><br><span class="line">cp -r ../source/$FOAM_NAME ./</span><br><span class="line">cp -r ../source/$THIRD_NAME ./</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件</span></span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT=OpenFOAM/export\ MY_INSTALL_PATH=&#x27;$INSTALL_PATH_NEW&#x27;\/app\nexport\ WM_PROJECT=OpenFOAM/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ FOAM_INST_DIR=\$HOME\/\$WM_PROJECT/export\ FOAM_INST_DIR=\$MY_INSTALL_PATH/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT_USER_DIR=\$HOME\/\$WM_PROJECT\/\$USER-\$WM_PROJECT_VERSION/export\ WM_PROJECT_USER_DIR=\$WM_PROJECT_INST_DIR\/\$USER-\$WM_PROJECT_VERSION/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_MPLIB=SYSTEMOPENMPI/export\ WM_MPLIB=INTELMPI\nMPI_ROOT=\$I_MPI_ROOT/&#x27; $FOAM_NAME/etc/bashrc # 使用intelMPI</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $FOAM_NAME/etc/bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译第三方程序</span></span><br><span class="line">cd $THIRD_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.thirdparty-9 2&gt;&amp;1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译OpenFOAM</span></span><br><span class="line">cd ../$FOAM_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.openfoam-9 2&gt;&amp;1</span><br></pre></td></tr></table></figure>
<h3 id="加载环境变量-2">加载环境变量</h3>
<p>以下为<code>env.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">由于安装时曙光超算上的intel编译器不支持C++14标准，因而采用gcc编译</span></span><br><span class="line">module load compiler/gcc/9.3.0 # 加载gcc</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $SCRIPTDIR/app/OpenFOAM-9/etc/bashrc</span><br></pre></td></tr></table></figure>
<h3 id="软件测试-2">软件测试</h3>
<p>以下为<code>job.sh</code>脚本内容，该脚本位于<code>case</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -J cavity</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -p xahctar</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -N 2</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --ntasks-per-node=2</span></span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">source ../scripts/env.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝官方自带算例文件</span></span><br><span class="line">rm -rf ./cavity</span><br><span class="line">cp -r $FOAM_TUTORIALS/incompressible/icoFoam/cavity/cavity .</span><br><span class="line"></span><br><span class="line">cd cavity</span><br><span class="line">cp $FOAM_ETC/caseDicts/preProcessing/decomposeParDict ./system # 自带算例为串行算例，将其修改为并行算例</span><br><span class="line">sed -i &#x27;s/4/2/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/8/4/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/20/100/g&#x27; system/blockMeshDict # 增大网格分辨率</span><br><span class="line">sed -i &#x27;s/0\.005/0\.00004/g&#x27; system/controlDict # 保证计算稳定</span><br><span class="line">sed -i &#x27;s/20/2500/g&#x27; system/controlDict # 设置输出文件间隔</span><br><span class="line">sed -i &#x27;s/0\.5/1/g&#x27; system/controlDict # 设置计算时间</span><br><span class="line"></span><br><span class="line">blockMesh &gt; log.blockMesh 2&gt;&amp;1 # 划分网格</span><br><span class="line">decomposePar &gt; log.decomposePar 2&gt;&amp;1 # 并行分区</span><br><span class="line">mpirun icoFoam -parallel &gt; log.icoFoam 2&gt;&amp;1 # 开始计算</span><br><span class="line">reconstructPar &gt; log.reconstructPar 2&gt;&amp;1 #将并行计算的数据归纳，便于后处理</span><br></pre></td></tr></table></figure>
<p>在<code>case</code>目录下运行<code>sbatch ./job.sh</code>命令即可提交任务。</p>
<h2 id="openfoam-10"><code>OpenFOAM-10</code></h2>
<h3 id="下载源代码-3">下载源代码</h3>
<p>以下为<code>download.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">cd $SCRIPTDIR/source</span><br><span class="line"></span><br><span class="line">git clone https://github.com/OpenFOAM/OpenFOAM-10.git</span><br><span class="line">git clone https://github.com/OpenFOAM/ThirdParty-10.git</span><br></pre></td></tr></table></figure>
<h3 id="安装-3">安装</h3>
<p>以下为<code>install.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">由于安装时曙光超算上的intel编译器不支持C++14标准，因而采用gcc编译</span></span><br><span class="line">module load compiler/gcc/9.3.0 # 加载gcc</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装目录</span></span><br><span class="line">INSTALL_PATH=$SCRIPTDIR</span><br><span class="line">INSTALL_PATH_NEW=$&#123;INSTALL_PATH//\//\\\/&#125;</span><br><span class="line">FOAM_NAME=OpenFOAM-10</span><br><span class="line">THIRD_NAME=ThirdParty-10</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入安装目录</span></span><br><span class="line">cd $INSTALL_PATH/app</span><br><span class="line">rm -rf ./*</span><br><span class="line">cp -r ../source/$FOAM_NAME ./</span><br><span class="line">cp -r ../source/$THIRD_NAME ./</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件</span></span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT=OpenFOAM/export\ MY_INSTALL_PATH=&#x27;$INSTALL_PATH_NEW&#x27;\/app\nexport\ WM_PROJECT=OpenFOAM/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ FOAM_INST_DIR=\$HOME\/\$WM_PROJECT/export\ FOAM_INST_DIR=\$MY_INSTALL_PATH/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT_USER_DIR=\$HOME\/\$WM_PROJECT\/\$USER-\$WM_PROJECT_VERSION/export\ WM_PROJECT_USER_DIR=\$WM_PROJECT_INST_DIR\/\$USER-\$WM_PROJECT_VERSION/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_MPLIB=SYSTEMOPENMPI/export\ WM_MPLIB=INTELMPI\nMPI_ROOT=\$I_MPI_ROOT/&#x27; $FOAM_NAME/etc/bashrc # 使用intelMPI</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $FOAM_NAME/etc/bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译第三方程序</span></span><br><span class="line">cd $THIRD_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.thirdparty-10 2&gt;&amp;1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译OpenFOAM</span></span><br><span class="line">cd ../$FOAM_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.openfoam-10 2&gt;&amp;1</span><br></pre></td></tr></table></figure>
<h3 id="加载环境变量-3">加载环境变量</h3>
<p>以下为<code>env.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">由于安装时曙光超算上的intel编译器不支持C++14标准，因而采用gcc编译</span></span><br><span class="line">module load compiler/gcc/9.3.0 # 加载gcc</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $SCRIPTDIR/app/OpenFOAM-10/etc/bashrc</span><br></pre></td></tr></table></figure>
<h3 id="软件测试-3">软件测试</h3>
<p>以下为<code>job.sh</code>脚本内容，该脚本位于<code>case</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -J cavity</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -p xahctar</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -N 2</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --ntasks-per-node=2</span></span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">source ../scripts/env.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝官方自带算例文件</span></span><br><span class="line">rm -rf ./cavity</span><br><span class="line">cp -r $FOAM_TUTORIALS/incompressible/icoFoam/cavity/cavity .</span><br><span class="line"></span><br><span class="line">cd cavity</span><br><span class="line">cp $FOAM_ETC/caseDicts/preProcessing/decomposeParDict ./system # 自带算例为串行算例，将其修改为并行算例</span><br><span class="line">sed -i &#x27;s/4/2/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/8/4/g&#x27; system/decomposeParDict # 设置为4核并行</span><br><span class="line">sed -i &#x27;s/20/100/g&#x27; system/blockMeshDict # 增大网格分辨率</span><br><span class="line">sed -i &#x27;s/0\.005/0\.00004/g&#x27; system/controlDict # 保证计算稳定</span><br><span class="line">sed -i &#x27;s/20/2500/g&#x27; system/controlDict # 设置输出文件间隔</span><br><span class="line">sed -i &#x27;s/0\.5/1/g&#x27; system/controlDict # 设置计算时间</span><br><span class="line"></span><br><span class="line">blockMesh &gt; log.blockMesh 2&gt;&amp;1 # 划分网格</span><br><span class="line">decomposePar &gt; log.decomposePar 2&gt;&amp;1 # 并行分区</span><br><span class="line">mpirun icoFoam -parallel &gt; log.icoFoam 2&gt;&amp;1 # 开始计算</span><br><span class="line">reconstructPar &gt; log.reconstructPar 2&gt;&amp;1 #将并行计算的数据归纳，便于后处理</span><br></pre></td></tr></table></figure>
<p>在<code>case</code>目录下运行<code>sbatch ./job.sh</code>命令即可提交任务。</p>
<h2 id="openfoam-11"><code>OpenFOAM-11</code></h2>
<h3 id="下载源代码-4">下载源代码</h3>
<p>以下为<code>download.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">cd $SCRIPTDIR/source</span><br><span class="line"></span><br><span class="line">git clone https://github.com/OpenFOAM/OpenFOAM-11.git</span><br><span class="line">git clone https://github.com/OpenFOAM/ThirdParty-11.git</span><br></pre></td></tr></table></figure>
<h3 id="安装-4">安装</h3>
<p>以下为<code>install.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module purge # 卸载之前的环境</span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line">module load compiler/gcc/9.3.0 # 加载gcc</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装目录</span></span><br><span class="line">INSTALL_PATH=$SCRIPTDIR</span><br><span class="line">INSTALL_PATH_NEW=$&#123;INSTALL_PATH//\//\\\/&#125;</span><br><span class="line">FOAM_NAME=OpenFOAM-11</span><br><span class="line">THIRD_NAME=ThirdParty-11</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入安装目录</span></span><br><span class="line">cd $INSTALL_PATH/app</span><br><span class="line">rm -rf ./*</span><br><span class="line">cp -r ../source/$FOAM_NAME ./</span><br><span class="line">cp -r ../source/$THIRD_NAME ./</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件</span></span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT=OpenFOAM/export\ MY_INSTALL_PATH=&#x27;$INSTALL_PATH_NEW&#x27;\/app\nexport\ WM_PROJECT=OpenFOAM/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ FOAM_INST_DIR=\$HOME\/\$WM_PROJECT/export\ FOAM_INST_DIR=\$MY_INSTALL_PATH/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT_USER_DIR=\$HOME\/\$WM_PROJECT\/\$USER-\$WM_PROJECT_VERSION/export\ WM_PROJECT_USER_DIR=\$WM_PROJECT_INST_DIR\/\$USER-\$WM_PROJECT_VERSION/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/export\ WM_MPLIB=SYSTEMOPENMPI/export\ WM_MPLIB=INTELMPI\nMPI_ROOT=\$I_MPI_ROOT/&#x27; $FOAM_NAME/etc/bashrc # 使用intelMPI</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $FOAM_NAME/etc/bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译第三方程序</span></span><br><span class="line">cd $THIRD_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.thirdparty-11 2&gt;&amp;1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译OpenFOAM</span></span><br><span class="line">cd ../$FOAM_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.openfoam-11 2&gt;&amp;1</span><br></pre></td></tr></table></figure>
<h3 id="加载环境变量-4">加载环境变量</h3>
<p>以下为<code>env.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line">module load compiler/gcc/9.3.0 # 加载gcc</span><br><span class="line">module load mpi/intelmpi/2021.3.0 # intel-2021</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $SCRIPTDIR/app/OpenFOAM-11/etc/bashrc</span><br></pre></td></tr></table></figure>
<h3 id="软件测试-4">软件测试</h3>
<p>以下为<code>job.sh</code>脚本内容，该脚本位于<code>case</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -J NACA0012</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -p xahctar</span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -N 2</span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --ntasks-per-node=2</span></span><br><span class="line"> </span><br><span class="line">module purge # 卸载之前的环境 </span><br><span class="line">source ../scripts/env.sh </span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝官方自带算例文件</span> </span><br><span class="line">rm -rf ./aerofoilNACA0012Steady </span><br><span class="line">cp -r $FOAM_TUTORIALS/fluid/aerofoilNACA0012Steady . </span><br><span class="line">cd aerofoilNACA0012Steady </span><br><span class="line">cp $FOAM_ETC/caseDicts/preProcessing/decomposeParDict ./system/ </span><br><span class="line">sed -i &#x27;s/8/4/g&#x27; ./system/decomposeParDict </span><br><span class="line">sed -i &#x27;s/4\ 2\ 1/2\ 1\ 2/g&#x27; ./system/decomposeParDict </span><br><span class="line">sed -i &#x27;s/nNonOrthogonalCorrectors\ 0/nNonOrthogonalCorrectors\ 2/g&#x27; ./system/fvSolution </span><br><span class="line"></span><br><span class="line">cp $FOAM_TUTORIALS/resources/geometry/NACA0012.obj.gz constant/geometry/ </span><br><span class="line"> </span><br><span class="line">blockMesh &gt; log.blockMesh 2&gt;&amp;1 </span><br><span class="line">transformPoints &quot;scale=(1 0 1)&quot; &gt; log.transformPoints 2&gt;&amp;1 </span><br><span class="line">extrudeMesh &gt; log.extrudeMesh 2&gt;&amp;1 </span><br><span class="line">decomposePar &gt; log.decomposePar 2&gt;&amp;1 </span><br><span class="line">mpirun foamRun -parallel &gt; log.foamRun 2&gt;&amp;1 </span><br><span class="line">reconstructPar &gt; log.reconstructPar 2&gt;&amp;1 </span><br></pre></td></tr></table></figure>
<p>在<code>case</code>目录下运行<code>sbatch ./job.sh</code>命令即可提交任务。</p>
<h2 id="openfoam-v1812"><code>OpenFOAM-v1812</code></h2>
<h3 id="下载源代码-5">下载源代码</h3>
<p>以下为<code>download.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">cd $SCRIPTDIR/source</span><br><span class="line">wget https://sourceforge.net/projects/openfoam/files/v1812/OpenFOAM-v1812.tgz</span><br><span class="line">wget https://sourceforge.net/projects/openfoam/files/v1812/ThirdParty-v1812.tgz</span><br><span class="line">tar -zxf OpenFOAM-v1812.tgz</span><br><span class="line">tar -zxf ThirdParty-v1812.tgz</span><br><span class="line">rm -rf OpenFOAM-v1812.tgz ThirdParty-v1812.tgz</span><br></pre></td></tr></table></figure>
<h3 id="安装-5">安装</h3>
<p>以下为<code>install.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载cmake环境</span></span><br><span class="line">module load compiler/cmake/3.23.3</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装目录所需环境变量</span></span><br><span class="line">INSTALL_PATH=$SCRIPTDIR</span><br><span class="line">INSTALL_PATH_NEW=$&#123;INSTALL_PATH//\//\\\/&#125;</span><br><span class="line">FOAM_NAME=OpenFOAM-v1812</span><br><span class="line">THIRD_NAME=ThirdParty-v1812</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入安装目录</span></span><br><span class="line">cd $INSTALL_PATH/app</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝源代码至安装目录</span></span><br><span class="line">rm -rf ./*</span><br><span class="line">cp -r ../source/$FOAM_NAME ./</span><br><span class="line">cp -r ../source/$THIRD_NAME ./</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改etc/bashrc文件</span></span><br><span class="line">sed -i &#x27;s/export\ WM_PROJECT=OpenFOAM/export\ MY_INSTALL_PATH=&#x27;$INSTALL_PATH_NEW&#x27;\/app\nexport\ WM_PROJECT=OpenFOAM/&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/HOME\/OpenFOAM/MY_INSTALL_PATH/g&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line">sed -i &#x27;s/HOME\/\$WM_PROJECT/MY_INSTALL_PATH/g&#x27; $FOAM_NAME/etc/bashrc # 更改安装路径</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $FOAM_NAME/etc/bashrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译第三方程序</span></span><br><span class="line">cd $THIRD_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.thirdparty-v1812 2&gt;&amp;1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译OpenFOAM</span></span><br><span class="line">cd ../$FOAM_NAME</span><br><span class="line">./Allwmake -j 24 &gt; ../log.openfoam-v1812 2&gt;&amp;1</span><br></pre></td></tr></table></figure>
<h3 id="加载环境变量-5">加载环境变量</h3>
<p>以下为<code>env.sh</code>脚本内容，该脚本位于<code>scripts</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">SCRIPTDIR=$(cd $(dirname &quot;$&#123;BASH_SOURCE[0]&#125;&quot;) &gt;/dev/null &amp;&amp; cd .. &amp;&amp; pwd)</span><br><span class="line"></span><br><span class="line">module load compiler/cmake/3.23.3 # 加载cmake</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载环境变量</span></span><br><span class="line">source $SCRIPTDIR/app/OpenFOAM-v1812/etc/bashrc</span><br></pre></td></tr></table></figure>
<h3 id="软件测试-5">软件测试</h3>
<p>以下为<code>job.sh</code>脚本内容，该脚本位于<code>case</code>文件夹下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -J cavity</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -p xahctar</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH -N 2</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SBATCH --ntasks-per-node=2</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">系统默认环境，无需purge</span></span><br><span class="line">source ../scripts/env.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝官方自带算例文件</span></span><br><span class="line">rm -rf ./cavity</span><br><span class="line">cp -r $FOAM_TUTORIALS/incompressible/icoFoam/cavity/cavity .</span><br><span class="line"></span><br><span class="line">cd cavity</span><br><span class="line">cp $FOAM_TUTORIALS/incompressible/icoFoam/cavityMappingTest/system/coarseMesh/decomposeParDict ./system # 自带算例为串行算例，将其修改为并行算例</span><br><span class="line">sed -i &#x27;s/20/100/g&#x27; system/blockMeshDict # 增大网格分辨率</span><br><span class="line">sed -i &#x27;s/0\.005/0\.00002/g&#x27; system/controlDict # 保证计算稳定</span><br><span class="line">sed -i &#x27;s/20/5000/g&#x27; system/controlDict # 设置输出文件间隔</span><br><span class="line">sed -i &#x27;s/0\.5/1/g&#x27; system/controlDict # 设置计算时间</span><br><span class="line"></span><br><span class="line">blockMesh &gt; log.blockMesh 2&gt;&amp;1 # 划分网格</span><br><span class="line">decomposePar &gt; log.decomposePar 2&gt;&amp;1 # 并行分区</span><br><span class="line">mpirun icoFoam -parallel &gt; log.icoFoam 2&gt;&amp;1 # 开始计算</span><br><span class="line">reconstructPar &gt; log.reconstructPar 2&gt;&amp;1 #将并行计算的数据归纳，便于后处理</span><br></pre></td></tr></table></figure>
<p>在<code>case</code>目录下运行<code>sbatch ./job.sh</code>命令即可提交任务。</p>
]]></content>
      <categories>
        <category>软件安装</category>
      </categories>
      <tags>
        <tag>OpenFOAM</tag>
      </tags>
  </entry>
  <entry>
    <title>博士规划</title>
    <url>/2023/10/04/%E5%8D%9A%E5%A3%AB%E8%A7%84%E5%88%92/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, the password is incorrect! Please try again." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="2d2cce7a6eefe11911106606f0cfaec0a38f8ebef75a3bd09b76daca6a365c01">afa383dd9f0877404a4bf59bf687fb98a8934981e238cd3b56d355daac35775cb69801eed226b0b564583aba6a8c22163022095b68bc16676666946c59bfcb9737477575dff63df795f776f95530907337e1ae68812f59da2899db790057b53da0e5e0d4649d469a4e53330b087ae5ba60c94ce7de3f4d9e05d51de10b94b6f5b8a6b7a4a3bd87dfcda45d3da107c83d</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Please input the password</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>常用文件</title>
    <url>/2023/09/13/%E5%B8%B8%E7%94%A8%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, the password is incorrect! Please try again." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="9e65b0109f92762242c6ecd5a38713f164b0c8947122ed6091022bbe04d3e813">517bb76ea955ce0930304e47a133ff7862ea64b2feb79ac33d6b3e179ea73001cb529c73b232d3901ca90c7d4a4e944333ca143741e7d270814306df5b165fab8c462ca1b4e2c8a416f359b195ec2db014e462ea5642d6168048f558e092facd419c1a5c059882eb291cbbce222efe16e091b02583c551d9285e22bb0e699e6116acb4858bebbe52b9b96d8ef76c376e20a4f9e487a98268e20adcbdcc3b452f69e660aab9b3de009cf39e2acff00ce1fe6f7bdd056175bd9b14402579356e94a0ddddbeb10efb2bbb28178ebff28bbcccb86047e02456ebf7907177d50e60ba9eb01f3cc5ae21cf1ec7e18e35f6eb62dbca940cc59706cf74bc61e3c70f6d403cc4033c9eb650e82d7db8f9bf7a0310d54f218cad79405234e20218939a5819ee0b87fe8fcd4f9a5abf52f0ed60d3669d4b7639442a061a2c2d33169e1c9d043587fb219a23a3314fa2cd55e2b728bf71850c9c84b20c72538b9436bf575366517ef604ae4c70545908d39fa93748b2b2afd9c6ed09a538692186cb7c4ea5190784059a651efba3f4c28b628a4e0b2ac6d0fe4f00cc86c2dcae4fe7e403a6fc5f1f4621936560d5a1b3f37fca53066f38caac6663ff62cdcb50dee7af0c90d49a73ac13e225d9820b37b5dd62f170321247986d93922d97cccf769bc9b0848710ab68abb64286902e728ec7c7ef63c858c91c48c57f9cb7c7a2c06f1732dfea84d0b30fe350091ca5844c917eda18b574da7270335d9a34741ab8a5df3ac2b44d36a26794d034fcdc8c5636232e290ae9285d35a1c7215309fbc66df2371d7f1774e6e2d171f2f067172c2734e15380d469b0ed42ff6ed16250ceac73a059d3f27d7a9e3b9b70b6833fdebd2351f17104e20a53cd91782fa3f6862e7f8191253b62468feeb7d44f567d8dc6e2ba0e84f8166756bec2c2ab690cd3b4b4eaf93ab472b24ec3063a9883e5e436af7a0a3efcbdf7c0f163864aff454f9252c80a98</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Please input the password</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>private</tag>
      </tags>
  </entry>
  <entry>
    <title>时间记录</title>
    <url>/2023/09/21/%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Sorry, the password is incorrect! Please try again." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="8e4f60f25ed3009710facb0b785b765fdbcd0f00553d946aed9219a72dfcac5a">afa383dd9f0877404a4bf59bf687fb98a8934981e238cd3b56d355daac35775c6afe7f1f4b0c816a3d513872fb8d747478e53290f7c0c10f4e333ba725092fa7c95bd466da0b495c9feb391e60252b63a130e0fdd4dfb0a0df87df695d89ba8f0ea7656e3389170bdbcce59586ec303693aadc3a02b1b4f33448f739fa6a58b653da55e80a48cf1d9d605eec5292a7eab02ba5db3341d5212186ee8dcd4d6d67d1163d5cd56bf3cea655b3ff3dc469360815326040f3bb8a12c07e4fe807ac46103187c71b0f0c0f75ee139debe21f6951e31671b60909c93051106c6b428f3fc778288b270efc0477f893bf57083af3c6df34f4b9ec5375c75bee3d7a88ce907dda625da1bf344a3e1cb5c0a60977e3ae1d1d8e79d6a19eb20373100d87f97a7662d58cdce41793b2da17b6faf71591182f431921ec40fdf98f5b707cd38e1fbf7890afdf815cabfda88eb88d6e1a806661dff2c9e9f5c0c6afbda43fc13aa64864f6100d5e936d6015bb5bdcbbd92003cb62c2ee355feec77da020c727c86279dc94a5ef0942c53239a4b75d5c022a072ed2b10c0b51d40a3a8aca8775169f2006d456df8d2a0940842785867b8f94626c2a608242a16dc0c83333b382edc56be84ff8d88e96e98b3a3f310532de47</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-xray">
      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Please input the password</span>
      </label>
      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">
        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>
        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>
      </svg>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <tags>
        <tag>private</tag>
      </tags>
  </entry>
</search>
